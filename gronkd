json = {};
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8 = {};
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.address = "0x521aacB43d89E1b8FFD64d9eF76B0a1074dEdaF8";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.authorIpfsHash = "QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg = {};
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.payload = {};
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.payload.body = "dump proposal, ignore it. ";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.payload.choices = [];
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.payload.choices[0] = "Awesome";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.payload.choices[1] = "Shit";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.payload.choices[2] = "No Idea";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.payload.end = 1605326400;
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.payload.metadata = {};
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.payload.name = "Test Proposal";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.payload.snapshot = 11247039;
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.payload.start = 1605153600;
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.space = "yearn";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.timestamp = "1605240345";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.type = "proposal";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.msg.version = "0.1.3";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.relayerIpfsHash = "Qmf8iYCvsHWTJ82FuAvedqJqJNpXkGYtz1RdohvFKVgweN";
json.QmNpTE2Yb3xWNS8LJ5rZ1Kp2wKKBfyizRy2iP25ze2jbd8.sig = "0x16133a475d9e122863d5ca2b9c24b49a2dfea9bbef69ed11ade12be22f7d0c9032a07cfd324820f343890981f62736799bc0eece041e8312878c0a5eb2e743ba1c";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB = {};
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.address = "0x9D2BF71Bc99eF1eeDCF267Fe5591E0Ee7536C714";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.authorIpfsHash = "QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg = {};
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.payload = {};
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.payload.body = "回家";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.payload.choices = [];
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.payload.choices[0] = "ok";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.payload.choices[1] = "off";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.payload.end = 1600862400;
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.payload.metadata = {};
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.payload.name = "规范化";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.payload.snapshot = "100";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.payload.start = 1598875200;
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.space = "yearn";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.timestamp = "1600674352";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.type = "proposal";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.msg.version = "0.1.2";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.relayerIpfsHash = "QmSNdRGCASJCPnJrVFFbSgDLgpNwHMKpEgW2fz6LgGviM3";
json.QmPRYLzXuzCLE39ibvMQSMUzhT7d4FREynMK41KowjgZfB.sig = "0xbcae2a81212ccbb95111edd31ef5342193482735f8969818d73c88e10cac2e3d6e5204b0063336a1e15de9f9270204f83559f7c70407d2441e75361fc35aa31c1b";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ = {};
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.address = "0x7A1057E6e9093DA9C1D4C1D049609B6889fC4c67";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.authorIpfsHash = "QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg = {};
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.payload = {};
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.payload.body = "This is the culmination of efforts since the [original proposal](https://gov.yearn.finance/t/lets-poach-samczsun-and-plant-the-seed-for-an-auditing-academy/5507) which led to a partnership with our friends at [Gitcoin and Status](https://gitcoin.co/blog/announcing-the-kernel-security-track/) who also have been thinking about security in our ecosystem. \n\n# Simple Summary\n\nWe launch the yAcademy: a security wing tasked with auditing Yearn's contracts, attracting and retaining top talent, and eventually generating revenue by expanding its auditing services to the ecosystem at large. Mission: audit Yearn contracts in a collaborative and semi-structured process. Administrative costs are kept near zero, as the tasks of advocacy, event organizing, educational curriculum are handled by our partners at Gitcoin and Status. The yAcademy is net positive from day one since money that would have otherwise been an operational expense given to auditing firms is now an investment that should pay back the principle immediately (in the form of audits of Yearn contracts) and generate revenue eventually (once the team has expanded to offer services to the ecosystem). \n\nTo align incentives, equity shares in the yAcademy is distributed to YFI governors, yAcademy partners, and the first five auditors to join. The alignment can be seen in the following figure:\n\n![final|690x408](https://user-images.githubusercontent.com/4562643/98841510-41d37b00-2459-11eb-95a7-705f40020e35.png) \n\n## Glossary of terms:\n**_Stakeholders_**: YFI holders, Gitcoin, Status, yAcademy permanent members (auditors)\n**_Founding members_**: the first five auditors to join the yAcademy. They get equity in yAcademy.\n**_Mentees_**: outstanding participants in the KERNEL program that compele the curriculum and show promise, they are invited to shadow audit in yAcademy in close collaboration with Founding Members and Yearn core team.\n\n\n## Abstract\n\nThe Yearn technical community is innovating at a rapid speed. Efforts must be made to mitigate software bugs. Auditing talent is currently scarce and will continue to be for sometime because the pace of innovation in smart-contract products is much faster than that of producing auditors.\n\nThe Yearn community already expends a significant amount of time negotiating audit contracts or coordinating one-off informal audits. Planting the seed for an auditing wing of Yearn will bring immense benefits in the short and long term. Money spent on audits is a realized cost, while money spent on yAcademy is an investment. Yearn has thus far this year spent more on audits/bounties more than the projected budget for yAcademy. By keeping administrative costs near zero, the yAcademy should be a net positive to YFI holders from day one. If structured and run efficiently, we should witness the rise of a new breed of excellent auditors that get vetted by going through the KERNEL program run by our partners at Gitcoin and Status.\n\nThe Yearn community should incentivise rising stars to stay and continue to work on Yearn contracts full time. As Yearn matures over-time, yAcademy can begin to offer services to the outside world. At that point, the yAcademy becomes a self-sufficient, and potentially massively profitable. To align incentives, equity in the yAcademy is distributed to YFI holders (65%), Gitcoin (10%), Status, and the first five permanent auditors (5%, 4%, 3%, 1.5%, 1.5% to the 1st, 2nd, 3rd, 4th, and 5th members respectively).\n\n## Motivation\n\n-  Yearn is innovating at an ever increasing speed.\n\n-  Software bugs are a matter of \"when\" and \"how bad\", not \"if\". We must make mitigation efforts.\n\n-  Auditing firms are overbooked, they have financial incentive to speed up audits which can affect quality.\n\n-  Negotiating audit contracts with auditing firms is a laborious and clunky analog process. \n\n-  Audit contracts are very expensive.\n\n-  Yearn is a hub of innovation and as a result should attract top talent.\n\n-  Smart contracts will probably experience an even bigger cambrian explosion once the enterprise starts using permissionless networks such as Ethereum as a settlement layer. Hence, the yAdademy will most likely become an highly-profitable organization, thereby paying back all the investment put into it .. and then some.\n\n- YFI are better off having auditing expenditure be an investment that pays itself back and more, rather than a realized operational cost lost to auditing firms.\n\n- Yearn has spent on security audits/bounties this year more than the projected budget for Yearn. \n\n## Specification\n\nThe figure above summarizes the flow, responsibilities, and expectations. \n\n### Overview \n\n- The academy is governed by all of its stakeholders but not micro-managed. The day to day by the auditors themselves autonomously, in close collaboration with the core team, and supervision of the multisig holders. YFI governors, Gitcoin, and Status may get involved if major decisions are to be made.\n\n- Start with 1 founding auditor, with the expectation to add 1-2 more at the end of each KERNEL-Curriculum-Shadowing iteration depicted in the figure above (2-4 iterations per year).\n\n- Communication between auditors and mentees is kept as efficient as possible. No endless tm discussions, but rather a streamlined lines of communication using productivity software.\n\n- Being a mentee in the yAcademy is trial-by-fire type of situation: mentees walk along the process of auditing a contract, receiving hints and/or assignments, results are shared in a certain format ect.\n\n- Mentees join by invitation only, and are unpaid. A few select mentees are selected based from the cohort of ~100 participants in the KERNEL program, but may be invited from the outside as founding editors, core team, and the community at large see fit.\n\n- Mentees that show merit begin to receive rewards. If they continue shining, they may be extended an offer to become permanent members with competitive compensation and equity (equity to the first 5 founding members only).\n\n- Yearn gets a 65% equity in the yAcademy in return for bootstrapping funding, sponsorship of KERNELs, and rewards to outstanding shadow auditors. The Yearn core team will be instrumental in the early stages of yAcademy to bring auditors up to speed and share their expertise. The remaining equity goes 10% to Gitcoin, 10% to Status, and 15% to the first five founding members: 5%, 4%, 3%, 1.5%, and 1.5% to the 1st, 2nd, 3rd, 4th and 5th founding members, respectively. \n\n\n### Rationale:\n\n-  Traditional ways of education and collaboration are obsolete.\n\n-  Invitation-only is an efficiency measure, to make sure time and energy is not wasted hand-holding mentees. But anyone who shows interest and meets the basic minimal requirements should get an invitation.\n\n-  Merit-based: auditors that stick around and bring value are rewarded.\n\n-  Synchronous communication is inefficient. \n\n-  Some structure in the collaboration between mentors and mentees is needed to reduce time waste.\n\n-  No time is wasted authoring educational materials: this is a trial-by-fire type of situation, mentees learn by walking along the auditing process of **real** contracts.\n\n- Equity ensures incentive alignments and reduces bootstrapping operational costs to the absolute minimum. By granting equity to founding members, yAcademy can stay competitive with the industry standard while not allocating too much money on salaries. At the same time, auditors are incentived to perform well since yAcademy's growth means the growth of their equity's value.\n\n### Short-term operational outlook (1-2 years):\n\nYFI governers should expect a budget of ~150-200k in the first year covering the funding of 1-2 founding members and including mentee rewards and kernel sponsorship. The second year's budget will be decided when the time comes, but is expected to not exceed the first year's significantly because the founding members may by then have reached a level where they can take on outside contracts for a premium, which then goes back to funding the yAcademy itself.\n\nyAcademy may go through iterations as we learn and adjust during the first 1-2 years. Current stakeholders all have a track record of being good actor in the ecosystem, and so the happy case outlined in the figure above has a good chance of squeezing out incredible value for the stakeholders and the ecosystem as a whole. \n\n# vote\n\n**Yes**: launch the yAcademy, allocate the budget, hire the first member, and start scouting for the second after the first KERNEL event Jan-Mar 2020.\n\n**No**: do not launch yAcademy, keep the status quo of Yearn paying auditing firms and/or having the core team take on security and/or rely on white hackers to find bugs for bounties.";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.payload.choices = [];
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.payload.choices[0] = "Launch yAcademy";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.payload.choices[1] = "Do not launch yAcademy";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.payload.end = 1605373200;
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.payload.metadata = {};
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.payload.name = "yAcademy: Planting the Seed of a Sustainably Secure Future for yEarn and Beyond";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.payload.snapshot = 11237558;
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.payload.start = 1605114000;
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.space = "yearn";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.timestamp = "1605114441";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.type = "proposal";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.msg.version = "0.1.3";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.relayerIpfsHash = "QmPqu4a7PRYPzpu3UaqVhum5sH6wDYcQ4Q664NayH1nMKF";
json.QmPTAfJCq3UtFZqY3jdgNEJsxc6yuHwfESnQyjjkoccZrJ.sig = "0xc23e111bd5f3fd9c19acf62467b4aaf74cfca402b138e2a348d422c634b837bb425da3f62f14cfcc5b946ea3e19f7802b9044e31b7958b82727af338ed1539411c";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES = {};
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.address = "0x1A332eB0e90c2074946363A9759014dc97F6056a";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.authorIpfsHash = "QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg = {};
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.payload = {};
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.payload.body = "Yes I can";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.payload.choices = [];
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.payload.choices[0] = "This";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.payload.choices[1] = "is";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.payload.choices[2] = "weird";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.payload.end = 1619697600;
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.payload.metadata = {};
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.payload.name = "Can I spam this thing?";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.payload.snapshot = "10873152";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.payload.start = 1598875200;
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.space = "yearn";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.timestamp = "1600259066";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.type = "proposal";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.msg.version = "0.1.2";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.relayerIpfsHash = "QmPk1VpKF7xTUxrRMopWscAu1CTdcywT7hX3WdXA9wiHr4";
json.QmPnGpgkXDyZg2RJda8UazVyyW6QXTeKdwCZz3s6Fp55ES.sig = "0xb2b4ffa9c87c3990c9f2922dedbb1e0bebf06f86f9bef8edb63f6e55f66f6cda5d477094272a7649968698876f6fcb8ddcc908b5fbd76bad6195cfb5274563121c";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW = {};
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.address = "0xe15C811b8C1a3486F6a82C13930704BBf9FF46aE";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.authorIpfsHash = "QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg = {};
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.payload = {};
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.payload.body = "test";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.payload.choices = [];
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.payload.choices[0] = "test";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.payload.choices[1] = "test";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.payload.end = 1608868800;
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.payload.metadata = {};
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.payload.name = "test";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.payload.snapshot = 11443197;
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.payload.start = 1606795200;
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.space = "yearn";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.timestamp = "1607843387";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.type = "proposal";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.msg.version = "0.1.3";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.relayerIpfsHash = "QmZhEoeyRSyjeDSfot6GCvhDcnVgJKLChbm21Q83zqVjNC";
json.QmPvovfoE9sYRNXSZmFu9htywwCtqvAYAzkdJPpN52e5tW.sig = "0xbaf6315a681d4d3ee4ca1c4c178b78a2ab84599dda5d4f0555e6f7c1210b17a459c45ddb134fe0fe267d7a480ab92312fa682656141a29b16f878983ece01a461b";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw = {};
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.address = "0x2D407dDb06311396fE14D4b49da5F0471447d45C";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.authorIpfsHash = "QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg = {};
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.payload = {};
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.payload.body = "Summary:\n\nAdding a hBTC/wBTC pool to further grow liquidity of BTC on Ethereum and easier swap between the two assets in the pool.\n\nAbstract:\n\nhttps://github.com/curvefi/curve-contract/tree/pool_hbtc\n\nThe hBTC/wBTC pool is a no-lending pool and more gas-optimized version of previous contracts. It’s ported to Vyper 0.2 and also changes the hardcap on admin fee to be 100%.\n\nMotivation:\n\nAdding a hBTC/wBTC pool will attract more liquidity to Curve and users can swap between two centrally issued Bitcoin on Ethereum tokens and withdraw at more places which should help liquidity for all tokenised Bitcoin forms on Curve.\n\nSpecification:\n\nThe contract has minimal cosmetic changes to previously audited contracts and has been thoroughly thoroughly tested in Brownie\n\nFor:\nThis would bring more liquidity to the Curve protocol as well as a new Bitcoin on Ethereum option\n\nAgainst:";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.payload.choices = [];
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.payload.choices[0] = "For";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.payload.choices[1] = "Against";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.payload.end = 1598616000;
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.payload.name = "CIP#5 Add hBTC/wBTC pool and a liquidity gauge for that pool";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.payload.snapshot = "10733775";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.payload.start = 1598356800;
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.space = "yearn";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.timestamp = "1598414565";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.type = "proposal";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.msg.version = "0.1.1";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.relayerIpfsHash = "QmeQdJDm2NJE9HYYsPC1NioEnbmPWRn1Sk4fpiD3zCot3u";
json.QmPwL7uLXfeAhCuC4Asu91BXtwHFk992bVLVuGwKhcdmPw.sig = "0xcdbd5f77efd1687fd1d35917babd95cb420b637602ad9dd304c0e696761c8ba16e3aca32ebe2752507155e6c12f2e1ed9f1c32fe403694087e6704690b8242161b";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc = {};
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.address = "0x13826Cc835B2F56358Df40564BAbeC128477bf54";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.authorIpfsHash = "QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg = {};
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.payload = {};
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.payload.body = "This is required";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.payload.choices = [];
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.payload.choices[0] = "12";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.payload.choices[1] = "34";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.payload.end = 1601380800;
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.payload.name = "New Proposal";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.payload.snapshot = "2323";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.payload.start = 1598875200;
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.space = "yearn";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.timestamp = "1599331418";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.type = "proposal";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.msg.version = "0.1.1";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.relayerIpfsHash = "QmaHbjpVD5i86gFEmQcn9CMe2sqJCBK5sJN49LXTjXvo4s";
json.QmQFrtuFaMf3C9i8T8VVzTuMZMLSvUAfFr9jc5i4miHLxc.sig = "0xc907e610e6f7feb476ac76d0bb25cc31e6e942175e453702328c0b1c4fd0e3520f2730467c80d5242d4ef4083703991053ea78150ba976c85cebd741f2aa12341b";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E = {};
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.address = "0x2E241fF5bee46DBf7E3b984D15388989b912F2A6";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.authorIpfsHash = "QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg = {};
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload = {};
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.body = "qweqweq";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.choices = [];
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.choices[0] = "qweqwe";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.choices[1] = "qweqwe";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.end = 1607589000;
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata = {};
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies = [];
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[0] = {};
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[0].params = {};
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[1] = {};
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[1].params = {};
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.name = "qweqwe";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.snapshot = 11458727;
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.payload.start = 1606897800;
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.space = "yearn";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.timestamp = "1608049666";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.type = "proposal";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.msg.version = "0.1.3";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.relayerIpfsHash = "Qmag8eSxGTVvpVmJQkreqB3ZwMbNrtCPjkZH8qBHkhgvvB";
json.QmQSrLhjC7mdVpAJP7arVTKxjGFyrWFUvqQLhW2xzYkc8E.sig = "0xc1d2514cb21285b193094234b5f91dda9417a80b6cdd130cca249e3755e89d2b091519bdba2b04a2940611ab0cebd5e390cb35034d1b92df19b3ed36a3eed7bb1c";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.address = "0x16841Fa3d0C952d0ed1bB8D93B61652200aC0A9b";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.authorIpfsHash = "QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.body = "up the staking rewards";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.choices = [];
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.choices[0] = "boost APY%";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.choices[1] = "advertise more";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.end = 1617188400;
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies = [];
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[0] = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[0].params = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[1] = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[1].params = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2] = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].name = "delegation";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.name = "can we get more people staking?";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.snapshot = 11981981;
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.payload.start = 1615032000;
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.space = "yearn";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.timestamp = "1614995909";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.type = "proposal";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.msg.version = "0.1.3";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.relayerIpfsHash = "QmXRSAuDty1dy3QFgTQ4Kcj4BBWj4MnrfLFCXjne6q5eZ3";
json.QmR2qDDKH28KRA7AmDhvaTTpKw9fbTR23Nb1okxK2Lao7F.sig = "0xe9d23f6e07135d1833548267d438f825e3bee326c793aed40f5ac2b574add7962aaf95c195e746dbee13fd2bebee3f468ce06b0aa8d9ee6834d330423f4046901b";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9 = {};
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.address = "0x7A1057E6e9093DA9C1D4C1D049609B6889fC4c67";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.authorIpfsHash = "QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg = {};
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.payload = {};
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.payload.body = "# Summary\nThis YIP proposes a redesign of the Yearn Vaults system to accommodate several improvements meant to increase the robustness, security, and flexibility of the Vaults moving forwards\n\n# Motivation\nThe current yVault design has made it possible for Yearn to scale to the point it is today. However, due to its design, it has been difficult to maintain, and is missing a number of features that could improve the risk/return profile of Vaults, and improve their overall security and reliability in the process.\n\nWe propose that a refactor of the Vault system to add these features would be an improvement to the overall design, enabling the maintainers of the Yearn codebase to increase their efforts at Quality Assurance and testing for faults, streamline the development of new and innovative strategies (with an improved and standardized API for Strategists to use), and most importantly give the Governance of Yearn the tools they need to optimize Vault yields and manage risk of a larger system better.\n\n# Improvements for V2 design\n- Allow a Vault to have multiple strategies at the same time\n- Streamline the development cycle of new strategies using a standard API\n- Streamline the QA/Security process for Vaults, to ensure the highest quality code\n - Ensure the Vaults are tested to handle different types of Strategy risk/return/volatility thresholds\n- Make it easier and safer for integrators to use Vaults in their projects\n\n# Specification\nThe Specification for the proposal is being tracked a Gist to better track any changes made.\n\nhttps://gist.github.com/fubuloubu/7b14c954c21d8cb01562edd732fd35b7";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.payload.choices = [];
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.payload.choices[0] = "Adopt the proposal";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.payload.choices[1] = "Reject the proposal";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.payload.end = 1602219600;
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.payload.metadata = {};
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.payload.name = "Vaults V2 Design";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.payload.snapshot = "11000190";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.payload.start = 1601960400;
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.space = "yearn";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.timestamp = "1601960642";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.type = "proposal";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.msg.version = "0.1.2";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.relayerIpfsHash = "QmTWWc1QWsfSSiCQzcKMjLjVbMqu2vgoocvjhn3WgGfZgr";
json.QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9.sig = "0xc8ce23c1bad9237cc2908534172c1798b28566bf582b40632e1478bc36f93264096af0687458514ac6d381754b37dd2953e5f67d8329104f4d35d0c4afe838ed1c";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ = {};
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.address = "0xdcbEfFBECcE100cCE9E4b153C4e15cB885643193";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.authorIpfsHash = "QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg = {};
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.payload = {};
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.payload.body = "qeqwe";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.payload.choices = [];
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.payload.choices[0] = "qwe";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.payload.choices[1] = "qwe";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.payload.end = 1601294400;
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.payload.metadata = {};
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.payload.name = "dasdas";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.payload.snapshot = "10879094";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.payload.start = 1598961600;
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.space = "yearn";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.timestamp = "1600338180";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.type = "proposal";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.msg.version = "0.1.2";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.relayerIpfsHash = "Qmcy8Q4jkkPshvWvLHA89enSP3DgwuLpQH8USyTYkSoxmo";
json.QmRdRPDABGH7z2ctDow43FuiSn5jfqDgBcwWkCgifTR5qQ.sig = "0x0a48f1e45086df394ed56a103c15118ada6fc46587063a83b5d65a3dac17b8db5122b130b66385dbb3a87ff2ece699e2866cc0d60a71552f9565250319b383d01c";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8 = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.address = "0x8D2DD1Bcc45A67F99E79cf0D4C81A7c0E6399803";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.authorIpfsHash = "QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.body = "Singular \"YFI Whale\"\nPlural \"YFI Whales\"\n(Idea came from the Sushi Swap farm YFI/WETH)";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.choices = [];
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.choices[0] = "Yea (Yes)";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.choices[1] = "Nay (No)";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.end = 1615312800;
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies = [];
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[0] = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[0].params = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[1] = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[1].params = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2] = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].name = "delegation";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.name = "Nickname for all YFI supporters.";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.snapshot = 11983834;
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.payload.start = 1614924000;
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.space = "yearn";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.timestamp = "1615021071";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.type = "proposal";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.msg.version = "0.1.3";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.relayerIpfsHash = "QmXYvjwTb6gh9ygLzAy1iqddhUufRcgbUWYFq2yGCDBuQv";
json.QmS9hfYWzhWmJnVc2dvQEFEm75q9SDykUwsciFeY6VYPh8.sig = "0xe549340ed1dbfb1c7d2f84124e0a5e2a4e2881f6c9e809fa05f8c48117ff48ba776858f517405414d19916e22382234cb18a587e42ebedb322eb419f49d6b4c01c";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5 = {};
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.address = "0x29C4dbC1a81d06c9AA2fAed93Bb8B4a78F3eabDb";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.authorIpfsHash = "QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg = {};
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload = {};
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.body = "Vote for your favorite design. \n\nThe winner will adorn the legendary PoG NFT POAPs that you will one day bequeath to your great-grand kids. Oh, and they win 5,000,000 Dres (0.05 YFI ?)\n\n@learn2yearn's Proposal: https://gov.yearn.finance/t/proposal-guccis-for-andre  \nOpen Call: https://gov.yearn.finance/t/open-call-gucci-slipper-nft-design-competition\n\n**1: boatonagoat** \n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/5/56dda19a542365a669873f1e04fbec84bdcbd63e.png)\n\n**2: Definn 1**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/8/80b87dac3261f289df3d623964c614c721d050c3.png)\n\n**3: uhmpeps & Definn**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/5/59abe1f9a50d4804c95202ac0dc4211cb410db84.jpeg)\n\n**4: mpod**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/0/06cf610ad92b9c0c687c8e3ab1dd7703a5e9a89e.png)\n\n**5: CryptoBeaver**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/e/edfffb9cedbeacddee0a9df00ba629e3e5a4c157.png)\n\n**6: kyoku**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/8/8ba76bc8f838a65d7c5fd1aaa6eeb48feda28af3.png)\n\n**7: Definn 2**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/1/196002ddc4d4fa52743165577cbe88fb97d6ef2e.png)\n\n**8: gabriel**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/c/cfcd65fb3af0f2f44994dfc1c43b4b605082d865.png)\n\n**9: buddyart 1**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/8/88228d2749b51cc040eefe68804f1615eb234264.png)\n\n**10: Jokreg**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/7/7d092ade96556f4c5903beb01595e3708ff3b4a4.png)\n\n**11: thajuiceman**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/0/032dde12d28afa1df30c566a2dc586362996e4e5.png)\n\n**12: buddyart 2**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/a/ab5eb39da430662d889834af2d4156af9f0d55b2.png)\n\n**13: vipes 1**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/d/de80a03b7b92af2f2770bcaab2e463bf470f5a2a.png)\n\n**14: vipes 2**\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/f/f3e764e44a1a28dd933212883d6f1a027b675559.png)\n\n\n\n\n";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices = [];
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[0] = "boatonagoat";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[1] = "Definn 1";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[2] = "uhmpeps & Definn";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[3] = "mpod";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[4] = "CryptoBeaver";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[5] = "kyoku";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[6] = "Definn 2";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[7] = "gabriel";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[8] = "buddyart 1";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[9] = "Jokreg";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[10] = "thajuiceman";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[11] = "buddyart 2";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[12] = "vipes 1";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.choices[13] = "vipes 2";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.end = 1599058800;
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.name = "VOTE: Gucci Slipper NFT Design Competition";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.snapshot = "10769381";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.payload.start = 1598886000;
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.space = "yearn";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.timestamp = "1598888088";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.type = "proposal";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.msg.version = "0.1.1";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.relayerIpfsHash = "QmZ8NUEb8VQmDbULHtJVbd61GmPpcPhq9WhxQsRfPYRUMq";
json.QmSEZBdFx9qfqYF2VGFWcWqnrCBZ6FHKDt5ThyPmHS8TN5.sig = "0x3c159d0d71f8ce1244df7b522f8e1b2069d0e9a4990e7a3c6db2c2f3c033e1f7622b5594eeb43db34d41f259a3b5d9121e134b77a6c4ef89fef5da4b420318401c";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2 = {};
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.address = "0x8B892C1Ef782aCEc06387bEA9255ee8CF36BE1Ba";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.authorIpfsHash = "QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg = {};
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.payload = {};
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.payload.body = "dasjsak";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.payload.choices = [];
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.payload.choices[0] = "a";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.payload.choices[1] = "asd";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.payload.end = 1601380800;
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.payload.metadata = {};
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.payload.name = "agajjas";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.payload.snapshot = "10905926";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.payload.start = 1598961600;
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.space = "yearn";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.timestamp = "1600693762";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.type = "proposal";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.msg.version = "0.1.2";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.relayerIpfsHash = "QmerVYYzsUhRTezUzDW2hSd3NHCLDsn2G9oMGqXUihXbpq";
json.QmSGdznAukV9w88e4T3sSAFSAGdRHFgWpFCmehuQfSNdt2.sig = "0xb8468f547e2d5b2726b9288f7a4badac4dec03a04d8e4d91d1560f74570ca6325378be41028ba653a3693419170f8a2afa5acb4f851d733008ead80da1f5f7751c";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.address = "0x649aDEBAd7f0A6a32BEb770498aB90017B2cDa6d";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.authorIpfsHash = "QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.body = "T";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.choices = [];
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.choices[0] = "Yes";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.choices[1] = "No";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.end = 1614308400;
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies = [];
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[0] = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[0].params = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[1] = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[1].params = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2] = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].name = "delegation";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.name = "T";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.snapshot = "11814690";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.payload.start = 1612407600;
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.space = "yearn";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.timestamp = "1612772812";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.type = "proposal";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.msg.version = "0.1.3";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.relayerIpfsHash = "QmYLjEcfMxyT38UYZcUTkddY2pWCCGHe2aun1PbNWwc8cX";
json.QmSJa3Sb9asQdgjFeMZygYcrXZbRX6BPFPpxc9ra9ukCWK.sig = "0x25c11686770807637618a0b6f0167adeb1cb6c112445f3592db0f55c8875a00179818fa77cdd51fa218f695f924b525088b3e6ea46469bcde85238e08a5412a11c";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS = {};
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.address = "0x81f407bb7604fbAEf76ea2dF330168f9a69D4e48";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.authorIpfsHash = "QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg = {};
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload = {};
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.body = "He is not heccin chonkers!!!!!!!!";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.choices = [];
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.choices[0] = "REMOVE";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.choices[1] = "NO REMOVE";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.end = 1608404400;
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata = {};
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies = [];
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[0] = {};
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[0].params = {};
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[1] = {};
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[1].params = {};
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.name = "Remove Gorby";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.snapshot = 11460071;
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.payload.start = 1608145200;
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.space = "yearn";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.timestamp = "1608067307";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.type = "proposal";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.msg.version = "0.1.3";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.relayerIpfsHash = "QmdkW26VyU5Km4yXC68TBr45iJN8t25rLeXRdR24ViXQLY";
json.QmSQqxzChmTf25fGtMtXDpzfzC6DPPbEF7bq3jCL3R1KtS.sig = "0x8ce1404ee2e3e6898ed88a774f192df12673b363bfcfe723403b5762c26f5cb770b7ba109511cddbaae8be06e92a44e10de2975b65438affda74dca4bf6c18981c";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB = {};
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.address = "0x7A1057E6e9093DA9C1D4C1D049609B6889fC4c67";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.authorIpfsHash = "QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg = {};
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.payload = {};
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.payload.body = "## Authors\n@banteg, @fubuloubu, @lehnberg, @milkyklim, @tracheopteryx \n\n## Summary\n\n-   Focused proposal to set the fee structure for Vaults v2 to:\n    1. No withdrawal fee\n    2. Management fee (2%)\n    3. Performance fee (20%)\n-   The proposal leaves:\n    -   Total fees collected at roughly the same level as for Vaults v1\n    -   Strategist reward allocation unchanged\n    -   YFI staking and rewards unchanged\n    -   Treasury management unchanged\n\n## Background\n\nThe high level design of the next iteration of Yearn Vaults, v2, has been voted on and approved by YFI holders.[[1]](#References) It is currently in the later stages of the development cycle. Testing has begun, and security audits are in progress.\n\nWith the new vaults likely being weeks away from launch, it is high time to finalize how fees will be collected in them.\n\n### Out of scope\n\nThere are currently active discussions underway in the community about many related topics, such as to what extent:\n\n-    Rewards should be distributed to YFI stakers [[2]](#References)\n-   Strategist creators should be rewarded  for their contributions [[3]](#References)\n-   Contributors should be allocated a portion of rewards for the purpose of long term incentivization [[4]](#References)\n\nThose questions are not answered by this proposal, and are not discussed further here. Specifically, anything that concerns what fees are spent on, how different stakeholders are compensated, or how the treasury should be run, is not covered by this proposal and is assumed to be unchanged.\n\n### In scope\n\nInstead, the focus here is to determine _how fees are collected_, and _the total amount collected_, with the intention to meet the following objectives:\n\n-   **Keep fees at roughly the same level.** The proposal should not lead to a significant change in the overall fee levels that are in place today with Vaults v1.\n-   Ensure fees incentivize the desired behavior among various stakeholders:\n    -   **Users** should be encouraged to keep funds in a vault if it performs well, and withdraw if the vault under-performs.\n    -   **Yearn** should be encouraged to design the best possible vaults, by ensuring rewards go up as a vault attracts and retains capital, and go down as capital leaves the vault. Similarly, rewards should increase if the vault performs well, and decrease if it under-performs.\n    -   **Third party integrations** should be encouraged to integrate Yearn vaults in their own products and services. It should be easy for them to reason about the expected behavior when depositing and withdrawing, and the fees charged by the vault.\n\n## Motivation\n\n### Previous fee structure, Vaults v1\n\n-   5% performance fee, out of which\n    -   4.5% went to Treasury\n    -   0.5% went to the Strategist\n-   0 to 0.5% withdrawal fee\n    -   0% when funds were available in the Vault\n    -   0.5% when funds had to be withdrawn from the Strategy\n\n### Problems with a fee on withdrawals\n\n-   **Charges Users when they are the least happy with the vault.** You are charged a withdrawal fee when you no longer use the vault. If the vault performs, you would leave your funds in it and avoid paying for the service.\n-   **Rewards Yearn when there is capital flight.** More money leaving the vault leads to more fees, when it should be the opposite.\n-   **Can be gamed.** Astute users and integrations can time it so that they make free withdrawals in the period after the vault has seen deposits, as long as it's done before those funds have been sent to the Strategy for investing.\n-   **Makes fees unpredictable for integrations.** It's unclear what the fees charged will be prior to the actual withdrawal, making it harder for third party integrations to calculate ROI accurately.\n\n### Benefits with a management fee\n\n-   **Continuous pay based on usage.** The vault provides a service that people are paying for, continuously, based on the time their capital is in the vault. There is no incentive to withdraw late or early.\n-   **Encourages optimizing for retention.** Yearn earns more fees when users keep funds in the vault, and makes less when they withdraw.\n-   **Benefits composability.** Makes it easier to integrate Vaults with other products and services.\n\n### Comparing fees with v1\n\nThe backtesting data produced in [[4]](#References) shows how the new fee model is delivering roughly the same amount of total fees, compared to the model used in Vaults v1:\n\n![bar chart](https://i.imgur.com/dI13oYy.png)\n\n|  | Withdrawal fee | Performance fee | Management fee | Total fees | % |\n|---|---:|---:|---:|---:|---:|\n| **Old** | $2,243,078 | $466,822 | N/A | $2,709,900 | 100% |\n| **New** | N/A | $1,867,288 | $699,237 | $2,566,525 | 95%\n\n#### Comments\n* The previous withdrawal fee accounted for a whopping **83%** of all fees collected. This is very high for a fee that is unrelated to actual performance of the service.\n* In contrast, the management fee in Vaults v2 would only account for **27%** of total fees.\n* A much larger portion of fees are now made out of the performance fee component, **17%** of total fees in the old model, **73%** in the new model. This means that incentives are better aligned as Yearn earns most of it fees and Users pay most of their fees only if the Vaults are performing well.\n\n## Specification\n\n### New fee structure\n\n-   0% withdrawal fee\n-   2% annualized management\n    -   Full amount allocated to Treasury\n    -   Accrued per block\n    -   Collected on each harvest)\n-   20% performance fee\n    -   19.5% allocated to Treasury\n    -   0.5% allocated to the Strategist (unchanged to v1)\n\n## References\n\n1. https://yearn.snapshot.page/#/yearn/proposal/QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9\n2. https://gov.yearn.finance/t/proposal-rethinking-capital-allocation/7304/\n3. https://gov.yearn.finance/t/proposal-increase-strategist-rewards/\n4. https://gov.yearn.finance/t/restructure-fees-and-align-incentives/";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.payload.choices = [];
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.payload.choices[0] = "Release Vaults v2 with the proposed fee structure";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.payload.choices[1] = "Release Vaults v2 with some other fee to be defined fee structure";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.payload.end = 1604966400;
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.payload.metadata = {};
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.payload.name = "Set Vault v2 fee structure";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.payload.snapshot = 11204540;
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.payload.start = 1604707200;
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.space = "yearn";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.timestamp = "1604676105";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.type = "proposal";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.msg.version = "0.1.3";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.relayerIpfsHash = "QmQ23XYtKiBrkxta6mwPMhXG3ctBzeXRpk2wpr8waASYXd";
json.QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB.sig = "0x85b1d26bbe747e918faacf9df37dc2933b5b85a052f09512c2dab7da42343c3042b6109907a9c24f30b73356f6eeba370bc1bb401ac2cf694520fd41a2fcdddc1b";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.address = "0x7Fd4ef1e5D1e37169125Cb0276156f17748B4EEF";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.authorIpfsHash = "QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.body = "You get it... hahahaha. I see you Andre. Dole out 1000 crv to observers in the yfi ecosystem  ";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.choices = [];
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.choices[0] = "1000crv to all voters";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.choices[1] = "0crv to all voters ";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.end = 1615568400;
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies = [];
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[0] = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[0].params = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[1] = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[1].params = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2] = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].name = "delegation";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.name = "Reward loyal observers";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.snapshot = 11988618;
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.payload.start = 1615309200;
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.space = "yearn";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.timestamp = "1615083617";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.type = "proposal";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.msg.version = "0.1.3";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.relayerIpfsHash = "QmXg92QU1eWDtb3pEfgVKBzzt6gJmcrqbHKYUhP7Fa33KB";
json.QmSdnGLtPuMvs79pP83WUfcjB2hGs18Uc4E2jeepGDcpQy.sig = "0x80f984bfff7b6734cdc3e4c6bf0e77ccf9480812b83503f9f680140f437041fb4137fe18b7cc1cf7bfa8df0fdfbd0bcdc35b6674e30ad14a005c7434c44d245f1b";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.address = "0xCE2329e61911a9872D346140dD5B813fcf9a3c3A";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.authorIpfsHash = "QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.body = "sdfdsf";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.choices = [];
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.choices[0] = "sdf";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.choices[1] = "sdf";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.end = 1616407200;
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies = [];
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[0] = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[0].params = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[1] = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[1].params = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2] = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].name = "delegation";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.name = "dsf";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.snapshot = 11999688;
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.payload.start = 1614765600;
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.space = "yearn";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.timestamp = "1615231048";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.type = "proposal";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.msg.version = "0.1.3";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.relayerIpfsHash = "QmNgwT5j4cnWC8StBeU4GEThzZCDmAz3mN4s55DxaYnyps";
json.QmSe1czVctgEvoDJq1YavnQgVuehPfFSPxJ5sZExZwfRMB.sig = "0xa222f9fd7033c81fc0ce894186f298f8848c06b435ffb6f5b166e37cc7dd49d5076f528ff17298e388d5b3b108357dda89d470f6e7ac1c2d1d0c7afd5c21532f1c";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t = {};
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.address = "0x2D407dDb06311396fE14D4b49da5F0471447d45C";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.authorIpfsHash = "QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg = {};
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload = {};
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.body = "Summary:\n\nadd new yVaults with Credit Delegation to maximize ROI and expand utilization of capital.\n\nAbstract:\n\nThe new yVault proposed aREN, aMANA, awBTC, aETH, aKNC, aBAT, aENJ, aSNX with all Credit Delegation enabled with up to 50% LTV (loan-to-value ratio), which is same as yaLINK.\n\nMotivation:\n\nCurrently yaLINK is the only vault with Credit Delegation 24 turned on. Credit Delegation increases the yield of a yVault and new vaults increases the capital utilization by introducing new users into yearn from other communities by bringing them yield on their tokens.\n\nSpecification:\n\nEach deposit into Aave mints interest-bearing aTokens, such as aLINK. Upon depositing to Aave, a credit line is available for exercise. Most depositors are not exercising they credit lines and would be happy to delegate their credit line to others for additional yield. Currently yaLINK has high ROI partly due to credit delegation. Upon passing this proposal, above new yVaults would be added with Credit Delegation of 50% of the locked aToken value. This means that any stablecoin could be borrowed up to 50% of the locked yVault value from Aave and used for strategies to increase ROI.\n\nAdd new yVault proposed aREN, aMANA, awBTC, aETH, aKNC, aBAT, aENJ, aSNX with all Credit Delegation enabled with up to 50% LTV (loan-to-value ratio)";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.choices = [];
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.choices[0] = "REN";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.choices[1] = "MANA";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.choices[2] = "wBTC";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.choices[3] = "KNC";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.choices[4] = "BAT";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.choices[5] = "ENJ";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.end = 1598616000;
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.name = "Add new yVaults with Credit Delegation to Increase ROI";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.snapshot = "10730784";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.payload.start = 1598356800;
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.space = "yearn";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.timestamp = "1598374594";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.type = "proposal";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.msg.version = "0.1.1";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.relayerIpfsHash = "QmQurVyJ58xjUGrhTeweqvCNHbekzRdqf3NfpFGYLqtmK8";
json.QmSpzqCsE8KBFU7C6UJvnUTQxp3eBJpDntBgC7pDAcrK6t.sig = "0x417fe1ba20af001c3897d46a7346bd02e4ecdb4f47c5c411a6aaf94ae1feea3312db68f594d7e9e60b2c18a6405c0f4eafe01ac6bce390143ea4ee66e4fec7861b";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC = {};
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.address = "0x43D05363a77662C94A9468c69972259c183A4B1B";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.authorIpfsHash = "QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg = {};
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.payload = {};
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.payload.body = "ererer test";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.payload.choices = [];
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.payload.choices[0] = "Yes";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.payload.choices[1] = "No";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.payload.choices[2] = "te";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.payload.end = 1600430400;
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.payload.metadata = {};
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.payload.name = "Goyal";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.payload.snapshot = "433434";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.payload.start = 1599739200;
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.space = "yearn";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.timestamp = "1600173569";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.type = "proposal";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.msg.version = "0.1.2";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.relayerIpfsHash = "QmUSkjyaMC52MYZEMHGC6EdXeLF8jhzQDtjeDpiwrp4Txf";
json.QmSzZ1aS5VmEqW77DLFDk8ReDw9V1y2325QsnK3ug45NtC.sig = "0xd903f1d1dbefad8247a0107bc3a6d4e9851ed7ea6907b06787b8c04d877635d75d336a80a35ae2a265cd6ff2c8f8d4935e19b5275b044f2304ab1a616ea9d8591c";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW = {};
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.address = "0xA4125Be03930083C8Bc209F000D8389e1673262E";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.authorIpfsHash = "QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg = {};
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.payload = {};
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.payload.body = "dwdwdw";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.payload.choices = [];
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.payload.choices[0] = "dwdw";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.payload.choices[1] = "dwd";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.payload.end = 1604125800;
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.payload.metadata = {};
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.payload.name = "wddwdw";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.payload.snapshot = 11145593;
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.payload.start = 1602225000;
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.space = "yearn";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.timestamp = "1603894424";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.type = "proposal";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.msg.version = "0.1.2";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.relayerIpfsHash = "QmVPPFmNg2L7xHoucHt9LLxiMveAQQTyA5jyZfnphkRgnt";
json.QmT1qdYTPuiAzU9swiWrcQqw1F4uyN2P9Nn2iUMGSBF6AW.sig = "0x9f9b88c719da66c1e038a68ab79f603f7605bf2057d98b9c413ee04d08013c2056a84c7915ac2c468f6946255b55f9baeba1cca86c4423952a7634875d663aba1b";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr = {};
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.address = "0x628C171fb77b8392c6642818f81F930fF4E9feE6";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.authorIpfsHash = "QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg = {};
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload = {};
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.body = "test";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.choices = [];
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.choices[0] = "No";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.choices[1] = "Brrrrrr";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.end = 1611831600;
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata = {};
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies = [];
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[0] = {};
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[0].params = {};
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[1] = {};
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[1].params = {};
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.name = "Test test";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.snapshot = 11727294;
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.payload.start = 1611658800;
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.space = "yearn";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.timestamp = "1611609607";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.type = "proposal";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.msg.version = "0.1.3";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.relayerIpfsHash = "QmSTXkCQMQS2FsgGWdgZtio29WYEmiKQmAJjKhUtv7JsW9";
json.QmT4QHv9u93HgrcdNPAw8ua2Waj3JHcSuWe8r4VEAopmzr.sig = "0x7f09f2c9fcc55326ca0455df93e5193337de0574fbfdea0847d17415ea8c2b243b5aafab72b7f5d14e528b524d28e3accb0739e8288804869aedfddabc3e28b51b";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.address = "0xa76A0979c289EE5A3CF54bf3f0354454E3012e2D";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.authorIpfsHash = "QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.body = "test";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.choices = [];
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.choices[0] = "aye";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.choices[1] = "nay";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.end = 1615003200;
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies = [];
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[0] = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[0].params = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[1] = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[1].params = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2] = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].name = "delegation";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.name = "Test";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.snapshot = 11977058;
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.payload.start = 1614916800;
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.space = "yearn";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.timestamp = "1614930682";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.type = "proposal";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.msg.version = "0.1.3";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.relayerIpfsHash = "QmYvyCaP7wuUMLEFwMYc9CigF23ncPzeN6HxJYmWyUJdFr";
json.QmT6aPSeSF6CKzoWKY8DKCST3tMdbuRMLzpzz7QAutdufX.sig = "0x23eb16c93d92273e6af8df5422f753c3b26d0e18dc9a50af50c146e9db0297262019d20c071d52f5c2537d2242c94947370161ca492e7c3b93d3808a297a21671b";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U = {};
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.address = "0x2D407dDb06311396fE14D4b49da5F0471447d45C";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.authorIpfsHash = "QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg = {};
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload = {};
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.body = "https://gov.yearn.finance/t/direct-of-rewards-towards-ethereum-public-goods-funding/3699\n\nSummary:\n\nFunnel some small percentage of rewards towards matching Gitcoin tech grants. Gitcoin uses a quadratic funding model, so the weights for grant matching are determined as a sum of square roots of all donations. A project with a number of small supporters can get the same matching as a project with a few large whale supporters. That helps amplify the small voices and give adequate support to the community-favorite projects.\n\nAbstract:\n\nIf implemented, a percent of rewards that goes through TreasuryVault will be redirected to Gitcoin Tech Grants matching. Yearn will become a matching partner of Gitcoin and help the ecosystem its built upon to thrive further.\n\nMotivation:\n\nQuardatic funding (explainer, paper) model has been considered a wildly successful way of funding public goods and ecosystem projects. Here are some reviews of Gitcoin’s previous funding rounds:\n\nBecoming a matching partner and not settling upon specific projects will help Yearn to keep neutral. The donors and supporters will be the ones who determine which projects get more matching.\n\nSpecification:\n\nIf ratified, the easiest way to achieve the result is to create a middleware contract that splits rewards between Governance and Gitcoin wallet. To activate it, these transactions will need to be called:\n\ntreasury.setGovernance(grants) to redirect treasury.toVoters() output to grants middleware\nygov.setRewardDistribution(grants) to enable notifyRewardAmount from grants contract\n";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.choices = [];
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.choices[0] = "0%";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.choices[1] = "1%";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.choices[2] = "2%";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.choices[3] = "3%";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.choices[4] = "4%";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.choices[5] = "5%";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.end = 1598702400;
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.name = "Direct % of rewards towards Ethereum public goods funding";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.snapshot = "10735941";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.payload.start = 1598443200;
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.space = "yearn";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.timestamp = "1598442956";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.type = "proposal";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.msg.version = "0.1.1";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.relayerIpfsHash = "QmVREYM8o83mARbcxm4T2urpsozTki4M6C8MA1PQCR139o";
json.QmTDiNtS8GWFTevbHKxUaZHRHDTkg6sJSsVJTGrkmDZ83U.sig = "0x0182f54bbc875f89328542f23de57c7e89836e9b97e940beaf7a0dc21344008003f71c83ef7e15a9f688972f3776f50433fbe8f3a75a50af173324ed702b47ec1b";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs = {};
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.address = "0xdcbEfFBECcE100cCE9E4b153C4e15cB885643193";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.authorIpfsHash = "QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg = {};
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.payload = {};
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.payload.body = "qwe";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.payload.choices = [];
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.payload.choices[0] = "qwe";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.payload.choices[1] = "qwe";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.payload.end = 1601380800;
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.payload.metadata = {};
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.payload.name = "qweqwe";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.payload.snapshot = "10879094";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.payload.start = 1600516800;
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.space = "yearn";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.timestamp = "1600338105";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.type = "proposal";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.msg.version = "0.1.2";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.relayerIpfsHash = "QmQ7Jq5UHrVFtgVEtYvfzD3jUzGak5UyVJXcpmfSjoGbCc";
json.QmTwxRLsd4DYZEzDuYHZmYq5BxhfsA7phMn3nun9tCcaXs.sig = "0xffd868cbe67f2f255cdaaf90f4d30da32f37c7cef3456f0827fff518df7eaa16757226f53c2a1313d5dedbc45ef04f3632221ae97715586b152201011c3f2abc1c";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.address = "0x2a704f87CB047691139c6fEC103ffbb10F9C67a2";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.authorIpfsHash = "QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.body = "test";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.choices = [];
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.choices[0] = "a";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.choices[1] = "b";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.end = 1615176000;
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies = [];
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[0] = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[0].params = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[1] = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[1].params = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2] = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].name = "delegation";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.name = "TEST";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.snapshot = 11977058;
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.payload.start = 1614571200;
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.space = "yearn";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.timestamp = "1614930609";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.type = "proposal";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.msg.version = "0.1.3";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.relayerIpfsHash = "QmVYtVs1z4gKXwxk45RXH851QEGdq7eMszcPusq2WyYMxy";
json.QmU2pCVLYEwJwaeC7Lrt9eskZFS4ZtzWwYT7nPYa78nrqG.sig = "0x455816417ca79dc1ddcf1c47b2c42a6fb8d8d669aafbca779d8251e9909ad2350b1e445b98d2c2e399fcaaa6b441afea627ce6b88df9d063d5d3dd5f84e072e41c";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U = {};
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.address = "0x5E024a938e9Fb9323207694d6d78FE541577c2A5";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.authorIpfsHash = "QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg = {};
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.payload = {};
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.payload.body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo commodo. Proin sodales pulvinar tempor. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nam fermentum, nulla luctus pharetra vulputate, felis tellus mollis orci, sed rhoncus sapien nunc eget odio. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. \n\nProin gravida dolor sit amet lacus accumsan et viverra justo commodo. Proin sodales pulvinar tempor. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nam fermentum, nulla luctus pharetra vulputate, felis tellus mollis orci, sed rhoncus sapien nunc eget odio. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n\nAenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo commodo. Proin sodales pulvinar tempor. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nam fermentum, nulla luctus pharetra vulputate, felis tellus mollis orci, sed rhoncus sapien nunc eget odio. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo commodo. \n\nProin sodales pulvinar tempor. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nam fermentum, nulla luctus pharetra vulputate, felis tellus mollis orci, sed rhoncus sapien nunc eget odio. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo ";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.payload.choices = [];
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.payload.choices[0] = "Choice_1";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.payload.choices[1] = "Choice_2";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.payload.end = 1600948800;
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.payload.metadata = {};
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.payload.name = "Test";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.payload.snapshot = "10917855";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.payload.start = 1600862400;
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.space = "yearn";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.timestamp = "1600850505";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.type = "proposal";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.msg.version = "0.1.2";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.relayerIpfsHash = "QmQEMYMf39MsKyXbb9Qi2jWuxWo7skopBtwT4M38f6MuNy";
json.QmUKfPe4KWzYSmZuR5dTf9Wmp46QvBcW94yupAZF7GoM9U.sig = "0xf2ac4378b43048a94d93d53185c403a91c06268e574bafde9161f70980f813387df2d75fc41812cc449085e6d5d8c0d46b8efa9b4da89721f9720e012e1708a51b";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W = {};
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.address = "0x991d540e7ECFa15dBe3F52d0f758010DBec85F6D";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.authorIpfsHash = "QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg = {};
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.payload = {};
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.payload.body = "12343";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.payload.choices = [];
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.payload.choices[0] = "a";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.payload.choices[1] = "b";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.payload.choices[2] = "v";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.payload.end = "2020-09-25T16:36:08.685Z";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.payload.name = "1234";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.payload.snapshot = "32435";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.payload.start = "2020-09-15T16:36:08.685Z";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.space = "yearn";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.timestamp = "1599496576";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.type = "proposal";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.msg.version = "0.1.1";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.relayerIpfsHash = "QmYSUH2NmYvKsk9tzePSRUgrxavRh3SXCrfHdgiqyQyxbv";
json.QmUaT3QxokDFW7BsvzGwZwatypjJkuqu86vCxXPhXkA86W.sig = "0x4197a750f1efbd05e461356e34da79e4a478cc40026991b4ae4f2cb05869c7ee775008f7e8f59df7ba0a9098489d3c093ca0c6b1acaddf0e3dee251dd384e7481c";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo = {};
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.address = "0x43D05363a77662C94A9468c69972259c183A4B1B";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.authorIpfsHash = "QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg = {};
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.payload = {};
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.payload.body = "Test";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.payload.choices = [];
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.payload.choices[0] = "yes";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.payload.choices[1] = "no";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.payload.choices[2] = "netural";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.payload.end = 1600948800;
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.payload.metadata = {};
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.payload.name = "Test";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.payload.snapshot = "3434343434";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.payload.start = 1600257600;
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.space = "yearn";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.timestamp = "1600171649";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.type = "proposal";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.msg.version = "0.1.2";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.relayerIpfsHash = "Qma6yD9XrTVCVLUZYGdLtvCdvKtan4KzJ7u52Afv9vCwMK";
json.QmUk3wSecphvCpsKfzfdJTNCTKA24hRZCXET4epZ9Vvsxo.sig = "0x3eeaae0d5163908bdf865411c3270f34863f32e37bbcbc6efe4ce73ff9f029d73af24818b84c28006c568b66656014f4e52c5f526714b720d19cef2852d9da961b";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc = {};
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.address = "0xF92aF337e80460cfddE01523A2a9fA9EaDe4D79a";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.authorIpfsHash = "QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg = {};
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.payload = {};
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.payload.body = "1";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.payload.choices = [];
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.payload.choices[0] = "1";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.payload.choices[1] = "2";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.payload.end = 1605931200;
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.payload.metadata = {};
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.payload.name = "1";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.payload.snapshot = 11235545;
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.payload.start = 1605067200;
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.space = "yearn";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.timestamp = "1605087554";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.type = "proposal";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.msg.version = "0.1.3";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.relayerIpfsHash = "QmP9QwhsM1ZuvqpyRtQYf3U3gP39FLKD6cj6uTNkXXYfc6";
json.QmUnbAd6zDgxaCJA1eNBB7yJcNBXPSkpAqJsmAa9qtgqUc.sig = "0x666ab80a6bc86c3832fc52f0f3c81cc59b8c5e9f3bde419b1117639628a0eaf106e544ae16403a95ec2226b0d07c223589520510e8345658e992fadd6df0c0cd1c";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h = {};
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.address = "0x13826Cc835B2F56358Df40564BAbeC128477bf54";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.authorIpfsHash = "QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg = {};
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.payload = {};
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.payload.body = "fdgfdgfdgdfg";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.payload.choices = [];
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.payload.choices[0] = "dfgfdg";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.payload.choices[1] = "dfgfdgdfg";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.payload.end = 1601380800;
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.payload.name = "new_propose";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.payload.snapshot = "4343";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.payload.start = 1598875200;
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.space = "yearn";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.timestamp = "1599333465";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.type = "proposal";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.msg.version = "0.1.1";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.relayerIpfsHash = "QmadMbXTKn1uqoFUCeG5x6qUEcsNwZY45vNiNerSXMkX2p";
json.QmUr6jtzRrjYQQ8XsiipqB5vRsCgrWJhAsGo98BM4cRE8h.sig = "0xe90e7d4ee87bd44f384e0377bb96cd6771d2846d12d83db37118a31be8ffdd655fb6706d5fd9212329d8befbf40b1f0d19e656e5eb55f319a78316f515240f331c";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG = {};
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.address = "0x25B28EE7f335F0396f41f129039F1583345B21b8";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.authorIpfsHash = "QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg = {};
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.payload = {};
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.payload.body = "### Summary\nCreate a new YFI Governance Vault that deposits YFI into MakerDAO to mint DAI, and this DAI is used to yield farm. Depositors in this Vault receive governance fees and yield-farming profits, with a part of profits potentially going to support protocol initiatives. This Governance Vault replaces current governance staking.\n\n### Background\nFor more information on this proposal and its discussion, please see: https://gov.yearn.finance/t/proposal-yfi-governance-vault-yacademy/8330. \n\nThe vote below aims to simplify our options. Either we make the YFI Governance Vault the only option, one of two options, or not an option at all. \n\nShould the YFI Governance Vault receive support, future discussions will include whether a portion of yield should go to protocol initiatives, and also whether insurance/cover should be standard, or if individual depositors should be left to purchase it themselves. \n\n### Poll Options\n1. Merge governance staking into a new Governance Vault. YFI is deposited to Maker to yield-farm with DAI. All protocol fees flow to depositors in this vault.\n\n2. Create the Governance Vault, but normal staking remains an option. Protocol fees flow to both YFI staked in governance and YFI in the Governance Vault.\n\n3. Keep things as is. No Governance Vault is created, and the YFI yVault must choose between utilizing YFI for staking or for yield farming.\n\n**Note:** This sentiment poll is **not** binding. However, this proposal directly affects YFI holders (and impact scales proportionally to YFI held), so a Snapshot poll is most appropriate. ";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.payload.choices = [];
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.payload.choices[0] = "Merge governance staking into a new Governance Vault. YFI is deposited to Maker to yield-farm with DAI. All protocol fees flow to depositors in this vault.";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.payload.choices[1] = "Create the Governance Vault, but normal staking remains an option. Protocol fees flow to both YFI staked in governance and YFI in the Governance Vault.";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.payload.choices[2] = "Keep things as is. No Governance Vault is created, and the YFI yVault must choose between utilizing YFI for staking or for yield farming.";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.payload.end = 1607533200;
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.payload.metadata = {};
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.payload.name = "[Sentiment] Create a YFI Governance Vault";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.payload.snapshot = 11374220;
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.payload.start = 1606928400;
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.space = "yearn";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.timestamp = "1606927896";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.type = "proposal";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.msg.version = "0.1.3";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.relayerIpfsHash = "QmeHeUYmg59P1MX1AbrpkCvSGohTwu4f84n7zWcB4bLWmN";
json.QmUxkb9Evz7235CqaH1uBdZVwPbB8Fv1UCP1DWDiCDMdYG.sig = "0xba13220101e23885d2bb36595ca3a96ab5cc3d131fa8869fbd10d829e26b7d941c53f75718a6e12e776f36eaaefc7f001f538b80a8a1227a42fbbf67f65315cd1b";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7 = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.address = "0x649aDEBAd7f0A6a32BEb770498aB90017B2cDa6d";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.authorIpfsHash = "QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.body = "test";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.choices = [];
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.choices[0] = "Y";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.choices[1] = "N";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.end = 1612839600;
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies = [];
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[0] = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[0].params = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[1] = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[1].params = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2] = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].name = "delegation";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.name = "test";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.snapshot = "11820840";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.payload.start = 1612836000;
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.space = "yearn";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.timestamp = "1612855102";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.type = "proposal";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.msg.version = "0.1.3";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.relayerIpfsHash = "QmXvXunXCEnn5xuZt5Mep8trhWUFuGu9XUJpcTm4w51SvF";
json.QmV2avsHesuJMkgFSFhbKkwFMTh3ECmjvotdbqSmUNYUo7.sig = "0xae622142f71a6b1ecf4b4eaf86bcb31f85767fdf1c321b51cdb4e6373eab614a60b1050e435cf655601b77c0bb1cd5910ae74438f4fe98119d84c8c073f1432e1c";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.address = "0x9d1c06191C652ef2FFdaBa357dbC81c54B1fdD88";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.authorIpfsHash = "QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.body = "What is the trend of bitcoin in the near future?";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.choices = [];
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.choices[0] = "Continued to fall";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.choices[1] = "Up in the short term";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.choices[2] = "other";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.end = 1614484800;
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies = [];
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[0] = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[0].params = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[1] = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[1].params = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2] = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].name = "delegation";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.name = "What is the trend of bitcoin in the near future?";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.snapshot = 11782002;
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.payload.start = 1612324800;
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.space = "yearn";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.timestamp = "1612338201";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.type = "proposal";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.msg.version = "0.1.3";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.relayerIpfsHash = "QmdrsrrB83qZDnAbm6o2BeZvUx48Xm1kzkieKTfXeL9QK6";
json.QmV4MzHfftkeGARK4FjdJHp1412QcoTeuwLkE351xEsR5M.sig = "0x9f80ec44384a0ccfdfcd9453bd3590ffba7f9e6349735a600fce9a39c5163ed62e1d0db58834ea8eb5beb835396576f8e88f66427c1dbb241d4c1f4d9e51ec6d1c";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf = {};
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.address = "0x2D407dDb06311396fE14D4b49da5F0471447d45C";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.authorIpfsHash = "QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg = {};
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.payload = {};
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.payload.body = "Summary:\nPropose to add C.R.E.A.M. Finance (CREAM) into yVault to create yCREAM Delegated Vault.\n\nBackground:\n\nC.R.E.A.M. Finance has quickly become a useful lego piece to DeFi, providing additional liquidity, leverage options, and yield for DeFi-relevant tokens such as YFI, yCRV, CRV, LEND, LINK, COMP, BAL, renBTC, USDC, USDT, ETH, BUSD with more coming up on the roadmap. Many of these tokens have become yieldfarming seed tokens, with potential for yield.\n\nPossible Strategies - CREAM Vault would accept CREAM deposits and use this liquidity in a few ways, including using CREAM as collateral to directly farm other tokens (similar to SHRIMP), or for borrowing seed tokens to farm other tokens (similar to YFV). Any yield earned above the debt is sold for CREAM and returned to the vault, increasing yield in CREAM.\n\nCREAM has become a part of the YFI ecosystem through the StrategyCreamYFI 2 v1 VAULT strategy, and is also part of the proposed yRenBTC Delegated Vault 1 strategy. Through CREAM Vault, this would create sustainable yield for both YFI and CREAM.\n\nStandard fees apply (0.5% withdrawal and 5% performance)";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.payload.choices = [];
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.payload.choices[0] = "For";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.payload.choices[1] = "Against";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.payload.end = 1598702400;
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.payload.name = "Add CREAM to yVault to create yCREAM Delegated Vault";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.payload.snapshot = "10736596";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.payload.start = 1598443200;
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.space = "yearn";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.timestamp = "1598451691";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.type = "proposal";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.msg.version = "0.1.1";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.relayerIpfsHash = "QmVmtM3597PVW1GEHcdD9RxJdMXF8Dbxjf4GHQBQceuT6v";
json.QmVfN2osdCsDZctfJyG94JAE6r9fQaerr7L8NELe9ZHtCf.sig = "0xa665b084308b35dedef01f1cd8ad6a7f9c08a9fe1fb6c69868c0dbf0516ac4ef7cf0c1cc2fc0a922c8e021e73322f8712e9f71eaad49507ef7ee7e5a409870331b";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg = {};
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.address = "0x0Cec743b8CE4Ef8802cAc0e5df18a180ed8402A7";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.authorIpfsHash = "QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg = {};
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.payload = {};
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.payload.body = "## Authors\n@banteg, @lehnberg, @lex_node, @milkyklim, @tracheopteryx\n\n## Summary\n- Transform the one-off YIP-41 budget into an Operations Fund that is allocated the same amount of funding on a continuous basis.\n- Permit the Fund to **buy back YFI** or other assets at its discretion.\n- Publish a quarterly report to make it easy for YFI holders to audit fund activities.\n- This proposal supersedes the treasury cap of YIP-36  and the operations budget of YIP-41. Future changes can be made through additional YIPs.\n- Together with the previously approved YIP-51 and YIP-52, this is the final piece in a trilogy of YIPs seeking to upgrade Yearn operations and financials. \n\n## Background\n\nAs Yearn evolves, so does the need to cover operational expenses and quickly react to changes.\n\nYIP-36[[1]](#References) laid the groundwork for Yearn operations funding. YIP-41[[2]](#References) extended this with the inclusion of a one-off operations budget. A forum thread envisioned the Multisig acting as an \"operations special interest group\"[[3]](#References). Today, there are multiple special interest groups (such as development, documentation, governance, branding/design, and communications) that are not directly related to the Multisig, but partly financed through the YIP-41 budget. The Multisig acts as an executor of the spending decisions of these groups. \n\nThis YIP builds on the previously adopted proposals to formalize a structure for sustainable funding of operations, to further Yearn's development and growth.\n\n### Out of scope\nThe following questions are not covered:\n- **How should YFI staking rewards be spent?** Proposals such as [[4]](#References) argue for a change in how staking rewards should be spent. This should be decided on separately by YFI voters. \n- **How should spending decisions be made?** This proposal focuses on the funding of operations activities, and how these are reported transparently. Decision-making processes are assumed to be existing per YIP-41.\n- **What is Yearn's long term governance structure?** YIP-41 temporarily empowers the Multisig while preparations are made for \"a more robust governance architecture\". Any material change to Yearn's governance would also need to consider the management of the Operations Fund.\n\n### In scope\nThe proposal attempts to answer the following questions:\n- **How do we sustainably fund operations over the longer term?** The budget in YIP-41 is one-off, for six months only. How do we ensure that operations activities are funded on an ongoing basis? \n- **How do we reward contributors better?** Today, contributors are paid in yUSD. There's a desire to partially reward contributors in YFI as well, to give them skin in the game and a stake in the success of Yearn. With a fixed supply of YFI, there needs to be a way to acquire YFI to be used as such.\n- **How do we keep accountability, without adding unnecessary overhead?** While we want sustainable funding and contributors to be empowered to act quickly and decisively, we also need to scrutinize spending decisions and hold those who make them accountable. Ideally this should be a simple process that avoids slowing down progress.  \n\n### Examples of Operations Expenditure\n* **Security costs.** 3rd party audits, bug bounties, tools.\n* **Contributor funding.** Recurring payments for full time contributors, one-off grants, bounties.\n* **Third party products & services.** Freelancers, companies. \n* **Running costs.** Gas expenditure, tools, equipment, infrastructure.\n\n#### Current Yearn operations spend\nEstimated to total ~$434,000 as of November 10, 2020. More than half of the operations spend is security related, with the greater part of the remainder spent on funding contributors in various forms.\n\n![](https://svgshare.com/i/RNu.svg)\n\n## Motivation\n\n### Justifying the proposal\n\n#### 1. Sizing the Operations Fund \nThe budget set in YIP-41 has so far been sufficient; there is no desire to increase it. Rather, the purpose is to transition from a one-off budget to a continuous funding process. \n\n##### Approximating current allocation\n\n![|3200x1440, 20%](https://svgshare.com/i/RPN.svg)\n\nThe above diagram is based on data of the total fees collected by Yearn vaults in a four month period, from July 30 - Nov 05 2020.[[5]](#References)\n\nThe fees have then been allocated according to the new vault fee structure of YIP-51[[6]](#References) and the updated Strategist allocation of YIP-52[[7]](#References).\n\nThe current budget for operations is based off of the allocation in YIP-41[[2]](#References), calculated as:\n```\n(a) $ 500,000 + (b) 4 * $ 181,000 = $ 1,224,000 \n```\nWhere `(a)` is the bug bounty allocation, and `(b)` is four months worth of monthly operations expenses.\n\nThis gives an **approximation** of how rewards would be allocated today, based on YIP-41, -51, and -52. Roughly **53% of the treasury funds** would be allocated to Operations.\n\n##### Proposed allocation\n\nBased on this, the proposal is to round this number down to an **even 50%** and divide the Treasury funds equally between YFI staking rewards and Operations:\n\n![|3200x1440, 20%](https://svgshare.com/i/RPG.svg)\n\n#### 2. Rewarding contributors\n\nPaying a proportion of grants in YFI is an obvious and immediate way to give contributors a stake in the success of Yearn.\n\nAs the Treasury does not earn YFI, nor is it able to mint YFI, the straightforward way to acquire YFI is to **buy back YFI** with part of the Operations Fund. \n\nAlthough this could incidentally have the added benefit of increasing buy demand for YFI, the purpose would not be to manipulate YFI price or to engineer long-term YFI price appreciation. Rather, the purpose would be to add YFI to the Operations Fund in order to reward contributors through YFI grants.\n\nRather than making an explicit pledge, or revealing a process that then is at risk of being exploited, it thought to be better to trial this on an ad-hoc basis. Exact capital allocations would be determined at the discretion of the Multisig based on various factors, including prevailing market conditions.\n\nFor instance, the recent negative downturn of the YFI price would have made an excellent buy opportunity for the Operations Fund.\n\nAs new Yearn products are introduced, so could the need emerge to buy back other assets than YFI. The Operations Fund therefore should have  the right to buy any asset as required.\n\n#### 3. Keeping contributors accountable\n\nAs operations move to continuous funding, tracking spending decisions and holding contributors accountable becomes ever more important.\n\nThis proposal does not introduce any new spending mechanisms. All spending is signed off by the Multisig, with activities already tracked and published in a dedicated repo, `/ychad-audit`[[8]](#References).\n\nIn addition, a quarterly Operations Fund Report will be published documenting the activities of the previous period, how funds were spent, the current health of the Operations Fund, and what the focus for the upcoming quarter will be. The report helps YFI holders to audit the fund, and intervene as required by passing a YIP with new fund guidelines.\n\n### Alternatives considered\n\nIn addition to the above 50-50 split, the following alternative spending allocations were considered:\n\n* **Allocating 100% of the management fee to the Operations Fund.** This would mean that 100% of the performance fee share would go to YFI stakers. This proposal would have meant a slightly larger Operations Fund, with income that would have been more predictable, as it would not be determined by actual vault performance but by total funds locked in Yearn. \n* **Allocating 75% of the management fee to Operations, and 25% of the performance fee.** Similarly, this would add a bit of performance fee into the mix, but keep the majority of the funds assigned to Operations coming from the amount of capital held in the vaults.\n\nWhile stability and predictability for the Operations Fund is desired, it is more important for contributors to have an equal amount of skin in the game as YFI stakers, even if this leads to a smaller budget if vaults underperform.  \n\n### Future possibilities\n* **Long-term YFI vesting, or yVest.** An obvious next step would be to establish some form of vesting plan for YFI allocation for long-term contributors. This could be realized with a contributor vault that \"dog foods\" strategies.\n* **Team Funds.** As teams mature, they could be allocated dedicated budgets from the Operations Fund, increasing decentralization and autonomy.\n* **Financial planning and analysis.** As Operations continues to evolve, further planning, budgeting, and forecasting can be added when deemed necessary.\n\n\n## Specification\n\n1. Effective with the introduction of Vaults v2, allocate 50% of Treasury fees to an Operations Fund, with the other 50% distributed to YFI stakers.\n2. Permit the Operations Fund to buy YFI or any other asset as required with its funds, and to include such in the assets at its disposal.\n3. Produce quarterly financial reports of the Operations Fund activities and decisions.\n4. As it goes in effect, the Operations Fund replaces the treasury cap of YIP-36 and the budget of YIP-41.\n5. The Operations Fund, its asset purchase authorization, and the other matters contemplated herein are not permanent, and can be altered or replaced by YFI holders as required, through the passing of a new YIP.\n\n## Vote\n\n**For:** Yes, establish the Operations Fund.\n\n**Against:** No, reject the proposal.\n\n**Note:** 3-days voting poll is **binding** (live from Nov 12 - Nov 15).\n\n## References\n\n1. https://yips.yearn.finance/YIPS/yip-36\n2. https://yips.yearn.finance/YIPS/yip-41\n3. https://gov.yearn.finance/t/understanding-decentralization-prioritizing-an-operations-team/\n4. https://gov.yearn.finance/t/proposal-rethinking-capital-allocation/\n5. Dataset available on request\n6. https://snapshot.page/#/yearn/proposal/QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB\n7. https://snapshot.page/#/yearn/proposal/QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3\n8. https://github.com/iearn-finance/ychad-audit/tree/master/reports/financial";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.payload.choices = [];
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.payload.choices[0] = "Yes, establish the Operations Fund";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.payload.choices[1] = "No, reject the proposal";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.payload.end = 1605447900;
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.payload.metadata = {};
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.payload.name = "[YIP-54] Formalize Operations Funding";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.payload.snapshot = 11243274;
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.payload.start = 1605188700;
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.space = "yearn";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.timestamp = "1605192177";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.type = "proposal";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.msg.version = "0.1.3";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.relayerIpfsHash = "QmX2SGyuvj2J35HJyqnToo9Mmcevi9paP7SmbRZw9VXeUV";
json.QmW2ZPfGrcNxVLvT2jm9fmvNwQLD9PrdToQDU8DNPp6Ckg.sig = "0xb392de404995563240ff477973efdf416d32001fc62c4610bf62dc4157324a4f627d68be1f23f2f517319de47038fcf186e48b9be55a216c7ac1b0167a475dc71c";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ = {};
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.address = "0xfD79812bfBAc243a90a4492E3f691DbC6b373e61";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.authorIpfsHash = "QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg = {};
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.payload = {};
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.payload.body = "nothing really how's it going";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.payload.choices = [];
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.payload.choices[0] = "great";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.payload.choices[1] = "not so good";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.payload.choices[2] = "when lambo";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.payload.end = 1602676800;
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.payload.name = "pasta poopy face ";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.payload.snapshot = "1234543234";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.payload.start = 1599048000;
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.space = "yearn";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.timestamp = "1599059207";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.type = "proposal";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.msg.version = "0.1.1";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.relayerIpfsHash = "QmYK4BCE14r66UtRRTBHj8cGrz5dUxXFtaZH7LsUo95mky";
json.QmWorSkqryWMkJRi2qZ17djdsyaKowX2ZHrTS3eYirkANZ.sig = "0x5b24b62032deb51aa5122671b4ea86822d6019fef95fbdd40f70dc298a8005d561fae6a2bf93fbb3361a411212874253aef8a96e926c440f77bfbfc285da89661c";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5 = {};
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.address = "0x334CE923420ff1aA4f272e92BF68013D092aE7B4";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.authorIpfsHash = "QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg = {};
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.payload = {};
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.payload.body = "Hi everyone! I know you’ve been anxiously awaiting this announcement. Me too. All the art pieces we received are amazing! It took the judges quite some time to decide.\n\nThis is the grand finale and the ball is now in your court. Community will vote for winner!\n\nBelow you will find the preselected artwork. We want the community to decide which one is the best. In the end, there can be only one.\n\nI want to thank Alex and Ilya from @rarible, @milkyklim and @WrongNebula for acting as judges.\n\nPsst! The voters will receive a surprise.\n\nCheck the images in the forum post: https://gov.yearn.finance/t/grand-finale-a-new-face-for-cover-nfts/7288\n";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.payload.choices = [];
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.payload.choices[0] = "Toxicpoeth";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.payload.choices[1] = "Coin_Brawl";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.payload.choices[2] = "LarryGobnik";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.payload.end = 1604178000;
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.payload.metadata = {};
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.payload.name = "Grand finale a new face for Cover NFTs";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.payload.snapshot = 11140876;
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.payload.start = 1603918800;
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.space = "yearn";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.timestamp = "1603831811";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.type = "proposal";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.msg.version = "0.1.2";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.relayerIpfsHash = "QmTYndJ5F9Cpqn7kXKyJyrSp9SJJSdLbSoJVCNbZUVwPZt";
json.QmWyD7CW6EZmW2hMXhjo8T7dYMoTMFT5MmhWbkompdkGq5.sig = "0x6c5a09e6439ca3e3701f2a69f3707cea01293d7e1b54f760723f40f1e604ae967c5d4c0ff4f45df8cd9e907e2ff5e2d3ecd96822924df4390162a0a5fa939e2a01";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.address = "0x7A1057E6e9093DA9C1D4C1D049609B6889fC4c67";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.authorIpfsHash = "QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.body = "# Authors\n\n@aleks-blockchaincap @banteg @dudesahn @ekrenzke @lehnberg @milkyklim @ryanwatkins @srs-parafi @tracheopteryx @vooncer @yfi-cent\n\n# Summary\n\nSafeguard Yearn's future development. Mint 6,666 YFI. Use ~1/3 of minted YFI to reward key contributors and put ~2/3 of minted YFI in the Treasury under the control of the community through future proposals. \n\n# Abstract\n\n**If adopted**, this proposal seeks to:\n\n1. Mint 6,666 YFI.\n2. Allocate ~1/3 of the minted YFI to key contributors as vesting retention packages.\n3. Allocate the remaining ~2/3 to the Treasury, which will be deployed through existing Governance for various uses, for example:\n   * Future contributor incentives\n   * Liquidity mining programs\n   * Staking rewards\n   * Protocol mergers & talent acquisitions\n   * Cross-protocol incentives to tighten co-operation across the ecosystem family of projects\n\nThis **benefits Yearn** as a whole by:\n\n- Retaining existing contributors\n- Incentivizing new contributors\n- Capitalizing the Treasury to a scale comparable to industry peers in order to better support growth\n\n\nThis **benefits YFI holders** in particular by:\n\n- Creating a strategic reserve to advance Yearn as one of the world's leading DeFi protocols\n- Aligning incentives across stakeholders\n- Providing for Yearn's future\n\n# Motivation\n\n## Evolve the fair launch \n- Yearn's launch was exceptional at creating a decentralized and engaged community, but it did not provide adequate incentives to retain existing and future contributors on an ongoing basis, nor did it provide the protocol with a war chest to fund future activities.\n- Viewing the fair launch as a living concept rather than a single event, this proposal seeks to remedy this\n- It does so with an emphasis on funding the Treasury for the benefit of all active protocol participants over the existing contributors at a ratio of rougly 2:1 in terms of allocated YFI\n\n## Remove Yearn's Competitive Disadvantage\n\n_Excerpt from  [[1]](#References):_\n\n>**Team token allocations**\n>Projects such as Uniswap, Aave, Synthetix, Compound, 1inch, Curve, and Balancer hold anywhere from $300 million-$2.13 billion in tokens aside for [contributors], with the average being between $500-600 million. This is generally 20-30% of the total token allocation. Newer projects such as SushiSwap, Badger, CREAM, Harvest, and Cover vary more between teams, but allocate between 10-25% of token supply to their teams and early contributors.\n>\n>**Treasury/operations token allocations**\nWhile the numbers vary here more widely, most of the major projects still have significant token amounts set aside for operations. Uniswap is on the high end with $4 billion, Aave, Synthetix, Balancer, and 1inch all have between $200-$570 million, and likely other projects without any tokens set aside for operations have ample funding from investors (Curve and Compound).\n\n## Why mint?\n\n_Excerpt from  [[2]](#References):_\n\n> [The decision] comes down to the market for talent and the opportunity cost for YFI contributors. We looked at other successful DeFi projects to see what the market says top-tier talent is worth:\n> \n> ![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/8/89eba70dade40032f422b719f59e7a6aa7318e87.png)\n>\n> The UNI team has 21.3% of tokens (which includes tokens for future employees) and UNI holders collectively control a treasury with 43% of the supply. At current market prices of $9.2 (which reflects a fully diluted valuation of $9.2B), each bucket has several billion dollars worth of UNI – team ~$2B and treasury ~$4B – giving the Uniswap team significant fire power for hiring and enabling a lot of future growth spend from the treasury (both buckets are subject to 4-year vesting).\n>\n> The COMP team has 26% of tokens and a smaller but still significant treasury with 7.8%. At the current market price of $226 per COMP, the team allocation is ~$580M and treasury ~$176M.\n>\n> You can quickly see that a treasury of $500K and a team allocation of 0% is way off market. The reality is that for Yearn to allocate even 5% (which would be well below the examples above), at current market prices (~$37K) Yearn would need to either earn $56M or mint $56M worth of YFI. **Given that a conservative figure is presently an order of magnitude higher than annualized YFI holder income, the only reasonable way to bridge the gap in the near-term is through a mint.**\n\n## Why 6,666 YFI?\n- 6,666 is 22% of the current total supply of 30,000 YFI.\n- After gathering feedback, modeling a number of mint scenarios and various retention package estimates, a ~20% increase was determined to be the minimum viable amount to provide competitive retention plan, using only roughly 1/3 of the total mint amount.\n- 22% is in line with yearn's peers, for example Aave minted 23% when they migrated from LEND to AAVE.[[3]](#References)\n\n## Improve Talent Retention & Acquisition\n- Contributors have recently been poached by other projects.\n- With the current operational treasury size of $500,000 and 0% token allocation to the team, Yearn struggles to compete with the compensation packages offered in the current market. These are becoming increasingly competitive.\n\n### BABY is a great first step, but not enough on its own\n\nBuyback and Build Yearn (BABY)[[4]](#References) establishes a moving target for YFI buybacks in USD terms. As Yearn earns more revenue in USD terms, it's possible that the YFI price in USD adjusts upwards to reflect those increased earnings. So it would be like trying to catch your own tail. Modeling shows that using 50% of Treasury earnings for buybacks would purchase 100-300 YFI per year (see sensitivities below). Even with the assumption that V2 vaults end up being very successful, earnings will likely not be enough to accumulate a sufficient amount of YFI for the Treasury.\n\nBelow are two different BABY scenarios. One sensitizing aggregate yields on V2 vaults and their effect on YFI buybacks. The other sensitizing operating expenses and their effect on YFI buybacks. The other with 100% of net income.\n\n***Aggregate Yields Sensitivity***\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/d/d149d69defb3b49e408457051857a78ce1b12242.png)\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/7/7c5ab77cc1dbfd2eebd1c8f3cfa3b791214a5501.png)\n\n***Operating Expenses Sensitivity***\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/f/f8d4da11b2a8c5101629c93c4002e33a2b64f59e.png)\n![](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/5/5f190f5e42701ce5f325a6dc875290dd4b1a275c.png)\n\n# Specification\n\n## 1. Mint 6666 YFI\n\nA proof of concept for minting has been produced [[11]](#References). If accepted, Yearn Governance would need to do these things:\n1. Deploy the vesting contract\n2. Call `TimelockGovernance.setTargetGovernance(YearnPact)`\n3. Wait 3 days\n4. Call `TimelockGovernance.updateTargetGovernance()`\n5. Call `YearnPact.brrr()`, which will mint and then revert the YFI token governance back to `TimelockGovernance` immediately thereafter\n\n## 2. Allocate ~1/3rd to vested retention packages\n\n- Out of the 6,666 minted YFI, allocate roughly 1/3rd (5% margin on either side) to retention packages in order to provide the sufficient face melt required for effective contributor stickiness.\n- **All YFI allocated to retention packages will be subject to vesting.**\n- Retention package details, including eligibility, amounts, and overall terms, will be prepared and presented by a _Compensation Working Group:_\n   - Working group members are recommended by the Operations team and should include a variety of project contributors.\n   - The Multi-sig approves the proposed members of the working group.\n   - The working group can gather feedback and input from existing community groups or form new ones as required.\n- Once appointed, the working group's tasks will be to:\n    1. Finalize compensation packages\n    2. Finalize vesting terms\n    3. Identify eligible recipients\n    4. Prepare a Compensation plan for the Multi-sig to review\n- After review, the Multi-sig approves the Compensation plan, or requests changes.\n- Separately, the working group is also tasked with formalizing the qualification process and retention packages for future contributors. Funding for this comes from the portion allocated to Treasury (see below).\n\n## 3. Allocate ~2/3rds to Treasury\n- Allocate the remainder of the minted YFI, i.e. roughly 2/3rds (5% margin on either side) to Treasury.\n- This allocation flows into the Operations Fund established by YIP-54 [[12]](#References) and can be spent accordingly, which includes through ad-hoc Governance proposals brought forward as YIPs.\n- The Operations Fund remains under the supervision of the Multi-sig.\n- **As YIP-56 [[4]](#References) makes clear, YFI in the Treasury, including those in the Operations Fund, cannot be used to vote.**\n\n# Discussion\nhttps://gov.yearn.finance/t/proposal-funding-yearns-future/9319";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.choices = [];
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.choices[0] = "Yes";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.choices[1] = "No";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.end = 1612288800;
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies = [];
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[0] = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[0].params = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[1] = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[1].params = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2] = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].name = "delegation";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.name = "YIP-57: Funding Yearn's Future";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.snapshot = "11745800";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.payload.start = 1611856800;
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.space = "yearn";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.timestamp = "1611856913";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.type = "proposal";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.msg.version = "0.1.3";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.relayerIpfsHash = "QmaNynzjFx1qoSQriCBe2Zr83E6S16hw8sd1S42q83yhdA";
json.QmX8oYTSkaXSARYZn7RuQzUufW9bVVQtwJ3zxurWrquS9a.sig = "0xeb79223c0bf6e3d126838502f05a9af2c9e6e699a7930d103e375c74ca6413d83e17db0b2c77c16721c6373f7c7de0aa1060eb41cfcb74f8484ecad004dd6cc21b";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR = {};
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.address = "0x2D407dDb06311396fE14D4b49da5F0471447d45C";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.authorIpfsHash = "QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg = {};
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.payload = {};
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.payload.body = "On 31/08/2020 18:08:47 the vote will close to add yVault to Curve DAO. This will allow yyCRV to participate and shape the Curve ecosystem.\n\nThe current vote can be found here; https://dao.curve.fi/vote/ownership/2\n\nTo ensure the continued success of yVault participation we propose adding a percentage of the farmed CRV to the vaults voting weight. Doing so also prohibits opportunistic farmers that have no intention of participating in governance from participating in yVault.\n\nAt this time, it is unknown what a good percentage would be to balance between voting weight vs 2.5x CRV boost vs ROI. As such, we propose to make this configurable and set an initial weight, based on the vote.\n\nCurrently yVault earns 78,792 CRV per day. Our veCRV target for 2.5x boost is ~150k. We suggest starting with a higher percentage to reach this number faster, and subsequently decrease from there.";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.payload.choices = [];
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.payload.choices[0] = "No changes, do not participate in DAO";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.payload.choices[1] = "< 5%";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.payload.choices[2] = "5% - 10%";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.payload.choices[3] = "10% - 15%";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.payload.end = 1598529600;
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.payload.name = "Update yyCRV strategy to participate in Curve DAO";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.payload.snapshot = "10729182";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.payload.start = 1598349600;
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.space = "yearn";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.timestamp = "1598353196";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.type = "proposal";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.msg.version = "0.1.1";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.relayerIpfsHash = "QmRUF4o1Saxn5oEyoj6iFFUjWbL9xy37C5jbAEivQavBqD";
json.QmXfeS2NCW435hfGDG3vscy3GxyGprgZYv6F4b1mo2zHfR.sig = "0xb43fd1a8d029236de3c99cf31b61380b4fd141ae2426ac1c3d44c202873aafb9392a1578b52153d922b2e88b5eb5cef7dc0f088c7edf7fd2b0f831db64ffeeb61b";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.address = "0x46028174371F3d960a86f72C69Ac5d4379d9A7f0";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.authorIpfsHash = "QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.body = "Give us way";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.choices = [];
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.choices[0] = "Minning?";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.choices[1] = "Gaming?";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.end = 1615028400;
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies = [];
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[0] = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[0].params = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[1] = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[1].params = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2] = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].name = "delegation";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.name = "How to earn ETH?";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.snapshot = 11979418;
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.payload.start = 1614942000;
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.space = "yearn";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.timestamp = "1614961715";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.type = "proposal";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.msg.version = "0.1.3";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.relayerIpfsHash = "QmViPYxb7cJL48jxZvrPxJC2QPfpSepdK9a56PDGPCTeaE";
json.QmXuVkq2R2YaubpNmopKRciCw3uU7RiXNx5wT8K6WX6HVw.sig = "0xc38d5e4b3101a5664011e5508ac531ddb844b19be9f67b783e3230d06149e7f41f10de6328b1b9ea3b4cb8095a174d39555102e9a53aaf3ac49db131f025d6e91c";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh = {};
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.address = "0x0Cec743b8CE4Ef8802cAc0e5df18a180ed8402A7";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.authorIpfsHash = "QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg = {};
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.payload = {};
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.payload.body = "Summary:\n\nAllow people to claim their rewards right now without any on-going voting.\n\nAbstract:\n\nMultisig will set breaker to true in the governance contract. This will allow people to claim rewards instantly.\n\nMotivation:\n\nWith current ethereum gas prices governance migrated to snapshot off-chain voting/signaling. While voting and saving on gas fees voters are unable to claim fee rewards acquired by the protocol.\n\nSpecification:\n\nNo new code will be deployed. If this proposal passes multisig will set breaker to true in the governance contract.\n\nFor: Set breaker to true.\n\nAgainst: Keep things as they are now.";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.payload.choices = [];
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.payload.choices[0] = "Set breaker to true";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.payload.choices[1] = "Keep things as they are now";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.payload.end = 1600870020;
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.payload.metadata = {};
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.payload.name = "YIP: Release fee rewards";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.payload.snapshot = "10905651";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.payload.start = 1600610820;
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.space = "yearn";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.timestamp = "1600690081";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.type = "proposal";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.msg.version = "0.1.2";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.relayerIpfsHash = "QmVDK1pZsffHxfeG2SU5wFhxoDRnQ1zT4ATaKngrngp3aD";
json.QmXudfEC9Lo9cv7j89h98WaSsVVMMWa1KKRyN4thgcEhrh.sig = "0x799469054f111981d291023b26de04a68e4a505d86b65fe3a88ac01bf97d28e67302eb0ed44330d3285396caa72e4173c5bebc47d74f940f3c3255aa0cf9817e1b";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57 = {};
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.address = "0x2D407dDb06311396fE14D4b49da5F0471447d45C";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.authorIpfsHash = "QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg = {};
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.payload = {};
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.payload.body = "Summary:\n\nBurn the timelock on the YFI token so that no minting can ever take place again.\n\nAbstract:\n\nSet governance to 0x0 on the YFI token, preventing all future issuance.\n\nMotivation:\n\nOn-chain governance will soon be finalized and deployed. This will be ready within the next ~2 weeks, pending on audits. As the first official on-chain enforced governance vote I want to propose burning the minting capability permanently, thus permanently capping YFI.\n\nSpecification:\n\nAfter on-chain governance is deployed. Multisig will transfer all system rights to governance. The first official on-chain enforced vote is proposed to be permanently capping YFI.";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.payload.choices = [];
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.payload.choices[0] = "For";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.payload.choices[1] = "Against";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.payload.end = 1600430400;
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.payload.metadata = {};
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.payload.name = "Burn YFI minting ability permanently";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.payload.snapshot = "10846514";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.payload.start = 1599825600;
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.space = "yearn";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.timestamp = "1599905874";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.type = "proposal";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.msg.version = "0.1.2";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.relayerIpfsHash = "QmcuMJMPbb16mMf9Brj3ErwzDxLs2ZuMwE1bKvysWZZbrY";
json.QmXywy67BG2rMwaMnfWWP5op6MWPdYUU3RPxD38WdxkN57.sig = "0xe821d0c7bba8c39fbadd3a28057e2ffd900e1568d08ef5fcb5c82d156137c70e19a7652de60d5195d50545b61e061ea6703b4a59a48b91062e1bf208d51af8121b";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL = {};
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.address = "0x6879B54d688C1C670B16dcAeaCE15065838847C6";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.authorIpfsHash = "QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg = {};
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.payload = {};
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.payload.body = "dndndggndgndgndggndadggnad";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.payload.choices = [];
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.payload.choices[0] = "ghjfhjfj";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.payload.choices[1] = "tyetyetry";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.payload.end = 1601035200;
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.payload.metadata = {};
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.payload.name = "dggad";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.payload.snapshot = "10906651";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.payload.start = 1600776000;
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.space = "yearn";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.timestamp = "1600761343";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.type = "proposal";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.msg.version = "0.1.2";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.relayerIpfsHash = "QmVGNegNfDuVhtJemQKSDwJYYVnZMQqdngwRvJY1kCtsiP";
json.QmY2yoYQPjEzi7ruJ6W5QEJiqgP3kBN8VMk1nftHR5xXXL.sig = "0xaa37021557e1e5fbf9b331ccb091e01ba20fd448a11e98848cc0f93536a7815c5dfb2b9666a39d92d40d9b340857a5446d78628e47ac00d05b19e5e2844174801c";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7 = {};
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.address = "0x37F2cd12632b0063B15695ad082EE2Dd41B6Cc78";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.authorIpfsHash = "QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg = {};
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.payload = {};
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.payload.body = " 阿斯蒂芬阿斯蒂芬阿斯蒂芬大沙发电视大师傅阿萨德阿萨德发送阿萨德发送到阿的说法水电费奥德赛阿斯蒂芬按时阿斯顿发送到发斯蒂芬阿斯蒂芬阿萨德\n第三发多少第三方奥德赛的说法是的稍等发送到发斯蒂芬sad发送到发送到发到发送到手打水电费但是发";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.payload.choices = [];
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.payload.choices[0] = "大";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.payload.choices[1] = "阿斯蒂芬";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.payload.end = 1605844800;
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.payload.metadata = {};
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.payload.name = "第三发多少第三方奥德赛";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.payload.snapshot = 11293733;
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.payload.start = 1604894400;
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.space = "yearn";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.timestamp = "1605858854";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.type = "proposal";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.msg.version = "0.1.3";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.relayerIpfsHash = "QmRVAhdzN7xxc7M3j4auDM4bLtDvgXDAZeaLRQSEHr7U3M";
json.QmY6W2wiyB4jAYRwrVdtkkAxDmu7h7dFUx5JVhXpfRP8C7.sig = "0xfae2a72d6f325fb1df6a253efe93f20f073002d478e9f0515d5b116be7987fe54b3bd5d8a579392ffe8550096da066b458f966d1414821df3404eee49e51416e1b";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN = {};
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.address = "0x0Ac81CBe8e07172643Fe5266A0F102bFE47DC1F1";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.authorIpfsHash = "QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg = {};
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload = {};
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.body = "WHy";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.choices = [];
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.choices[0] = "w DAwd ";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.choices[1] = "aw da dw";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.end = 1611124200;
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata = {};
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies = [];
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[0] = {};
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[0].params = {};
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[1] = {};
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[1].params = {};
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.name = "Why";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.snapshot = 11679695;
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.payload.start = 1610951400;
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.space = "yearn";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.timestamp = "1610978865";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.type = "proposal";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.msg.version = "0.1.3";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.relayerIpfsHash = "QmT83AKvSuNwsKgmHEyCqCiCtx9FiXY9mDTQtxQTtZNDpn";
json.QmYJmFfdjfLUTEASGSfequZ7mMVHrY9yoESa4ZY6qWZ3gN.sig = "0xd23e682d78297e76f68a072e64c1fb93d12822437fbe837e08a42b1e56ee483477288cb89081ab034b2036961db869f67f93468bc1425e968f56f030e35867671b";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky = {};
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.address = "0xD083f0A849877139dc42be34297Aa4B7755b1Ba8";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.authorIpfsHash = "QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg = {};
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.payload = {};
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.payload.body = "Test";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.payload.choices = [];
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.payload.choices[0] = "test";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.payload.choices[1] = "test";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.payload.end = 1600776000;
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.payload.metadata = {};
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.payload.name = "Test";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.payload.snapshot = "34";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.payload.start = 1600171200;
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.space = "yearn";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.timestamp = "1600200195";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.type = "proposal";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.msg.version = "0.1.2";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.relayerIpfsHash = "QmaXYF6mMfv5pJ6w1H1gYVo4N4iSQmNp7rZEDYh6juLH8o";
json.QmYbHfPHjTDfkwLzHz2XoFoAqPHQCZ6H8NbUcxn76q7Gky.sig = "0x8a89509fcfc5dc8d90d20c027c78cb7e1531c07875e96665bd6be9cdd2611b686325b5e6fdc8e4a8d9e81179b5fa392a0638baa9a19afd3a8f0cdbffe0a6befd1b";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V = {};
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.address = "0x0Cec743b8CE4Ef8802cAc0e5df18a180ed8402A7";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.authorIpfsHash = "QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg = {};
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.payload = {};
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.payload.body = "**Summary**: \n\nSeize ~8 YFI from treasury [contract](https://etherscan.io/address/0x93A62dA5a14C80f265DAbC077fCEE437B1a0Efde) and use these funds as a first step to create contributors' stash.\n\n**Rationale**:\n\nNormally, all tokens sitting in treasury [contract](https://etherscan.io/address/0x93A62dA5a14C80f265DAbC077fCEE437B1a0Efde) are recycled – sold for yCRV and send as rewards to YFI stakers. \n\nProposal is to start a slow paced accumulation of YFI for future contributors – seize ~8.005026733686906244 YFI currently sitting in treasury. \n\n**For**: Seize ~8 YFI from treasury [contract](https://etherscan.io/address/0x93A62dA5a14C80f265DAbC077fCEE437B1a0Efde).\n\n**Against**: Leave funds for recycling.\n\n**Poll**:";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.payload.choices = [];
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.payload.choices[0] = "Seize ~8 YFI from treasury contract";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.payload.choices[1] = "Leave funds for recycling";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.payload.end = 1605173400;
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.payload.metadata = {};
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.payload.name = "First step to contributors stash";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.payload.snapshot = 11199699;
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.payload.start = 1604611800;
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.space = "yearn";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.timestamp = "1604612275";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.type = "proposal";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.msg.version = "0.1.3";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.relayerIpfsHash = "QmThKrtER31UnKnd5XAENEukVsaJWAAd51Zz6R7rkJu3hu";
json.QmYnnY36oysGR5ww7hWq7duWtHxHn5PWyL72KBb33dC36V.sig = "0xa6b1f9a6346adea9c36af453a75b06bc3c0664e702c022d5af43e994359b11ae6c48186a5d1fb24c20dc3eb29ba085885762ceb47b8d43bd7cf64a57de8c025d1b";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD = {};
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.address = "0x8B892C1Ef782aCEc06387bEA9255ee8CF36BE1Ba";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.authorIpfsHash = "QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg = {};
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.payload = {};
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.payload.body = "abjssakla";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.payload.choices = [];
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.payload.choices[0] = "a";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.payload.choices[1] = "b";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.payload.end = 1600948800;
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.payload.metadata = {};
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.payload.name = "aaaaaaaaaaaa qaaa ";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.payload.snapshot = "10905490";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.payload.start = 1600776000;
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.space = "yearn";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.timestamp = "1600687927";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.type = "proposal";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.msg.version = "0.1.2";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.relayerIpfsHash = "QmbcKFnRLPqVijLQSEfUWHGNDr8oHijLLXLM1iNWZmGhgf";
json.QmYpnQjX9oCvSQhdm8dFys9Bza9ULwJ2LoWg8d3L51k7fD.sig = "0x341407b29f6a23760657a5a9138c802e0d67be9960dc00163da9952d0f50ab9305d84fabd9cb6a938e0e4eafd4ac506d23b02c51de0d461f493bd06d6789a2621b";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF = {};
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.address = "0x25B28EE7f335F0396f41f129039F1583345B21b8";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.authorIpfsHash = "QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg = {};
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.payload = {};
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.payload.body = "# Authors \n@franklin @dudesahn\n\n# Summary\nThe purpose of this proposal is to standardize the Yearn Improvement Proposal (YIP) introduction, voting, and implementation process that governs the Yearn Finance protocol.\n\n# Abstract\nThis proposal formalizes the process for introducing, voting, and implementing YIPs. Valid proposals are to be discussed for at least 3 days on Yearn’s governance forum[1] and include a forum poll to gauge sentiment. If after at least three days there is a 25% “For” vote in the forum poll it may then move to formal voting via Snapshot. In order for a vote to pass it must have a majority support (> 50%) after at least five days of voting. Following a successful vote, necessary changes will be implemented by Yearn’s protocol or operations team and signed by the multi-sig, if necessary. Changes to this policy, including quorum requirements or what constitutes a majority vote, can only be enacted by a valid YIP that overwrites this policy. \n\n# Motivation\nAlthough there are several informal standards governing the YIP introduction, voting, and implementation process there is no single, clear policy. YIP 0[2] outlined this process, but it focused largely on the proposal only after it has transitioned to the voting/YIP stage, and was enacted when all voting was on-chain. Recent proposals have not followed the quorum requirement defined in YIP-12[3]. Additionally, no YIP or formal policy has been implemented that specifies votes conducted via Snapshot are formal and binding. This YIP would define and formalize the process in order for proposals to be valid and binding, and reduce any confusion in the YIP introduction and voting process. \n\n# Specification\n#### *Introducing the YIP*\nIn order to submit a potential YIP for voting a user must first create a thread for the proposal on the Yearn governance forum[1]. Complete the auto-populated fields that appear when creating a proposal on the forum. A screenshot of these fields are below:\n\n**![|624x376](https://aws1.discourse-cdn.com/business20/uploads/yearn/original/2X/0/0d5e76540caa26599855819d7b3de7d6e8433587.png)**\n\nAdditionally, the thread should include a poll from the governance forum to gauge interest from the wider governance community. This poll may be conducted using Discourse’s native poll or using Snapshot, although the native option is preferred to avoid confusion with YIP voting. After the thread has been on the governance forum for at least 3 days and has received over 25% “For” votes it can proceed to formal voting via Snapshot. This allows the community to suggest potential changes to the proposal before it moves to the formal voting phase on Snapshot. Please do not assign your proposal a YIP number; numbers will be assigned by moderators prior to a vote taking place.\n\nIf a proposal was introduced on the governance forum and achieved at least a 25% “For” from the poll but is not submitted to Snapshot within 30 days, the author of the proposal must re-submit the proposal to the governance forum and restart the process. This ensures that proposals that previously received support from governance still retain support from the community.\n\n#### *Formal Voting Phase*\nSnapshot is used for formal, binding votes. The user who authored the YIP will also create the proposal on Snapshot[4]. Snapshot requires 1 YFI in a user’s wallet to create a proposal. If the author does not meet this requirement then contact a moderator who will submit the proposal on your behalf. Before creating the Snapshot vote, please wait for a moderator to assign your YIP a number and begin your Snapshot title with it.\n\nA previous version of this proposal called for a minimum of 72 hours for voting, and a 20% quorum requirement. In response to feedback that a quorum requirement might be difficult to quantify and could lead to time-consuming rallying of apathetic voters, we have instead opted to extend the minimum voting window to 96 hours (5 days), with a maximum length of 7 days. This extension period, coupled with an active communication of YIPs via the governance forums and on social media should help ensure that no YIPs slip by, or malicious ones are approved. 5 days is sufficient time for the wider community to participate.\n\nThe block selected for the Snapshot vote should be a block close to the Snapshot submission. In order for a vote to pass it needs to have a majority approval (>50%) by eligible voters. The eligible vote is defined as YFI held in the governance staking contract and the yYFI vault at the time the vote is proposed on Snapshot. If the Snapshot vote does not meet a 50% majority approval then the vote is rejected and no changes will be enacted. Authors of proposals that are rejected may resubmit their proposal, but should include significant changes that address issues that may have prevented the YIP from passing during the initial vote.\n\n### Scope\nThis specification aims to clarify which proposals should move to the YIP stage, how long they should be discussed for, and how long the vote should be open for. By only allowing proposals to move to YIP/voting after several days of discussion, we ensure that everyone’s voice is heard, and proposals should more accurately reflect community consensus. \n\nAdditionally, while some may think that three days is too short to adequately discuss a proposal, this is simply the minimum requirement. We expect most discussions to last for significantly longer than this (as they have in the past), with only a select few well-planned and researched proposals with near unanimous approval moving through so quickly. This proposal also will not stifle the open source protocol improvements that are made daily by dozens of Yearn’s contributors. It only aims to govern those proposals that seek community feedback and ratification as YIPs. \n\n### Other Uses for Snapshot\nSnapshot may still be used for informal signal voting, including community contests, but its primary purpose will be to conduct formal, binding votes.\n\n# TL;DR\n1. All proposals must be discussed for at least 3 days with a forum poll before they will be assigned a YIP number and move to Snapshot voting. \n2. The Snapshot vote will be binding, and must be open for at least 5 days. At least 50% must vote “For” the proposal for it to pass. \n3. Most open-source protocol updates do not require YIPs; this process only governs those changes or proposals that wish to be discussed and enacted as YIPs.\n\n**For:** Formalize the YIP introduction, voting, and implementation process as specified above.\n\n**Against:** Do not formalize the process. No changes made.\n\n**Note:** 5-day voting poll is **binding** (live from Nov 17 - Nov 22).\n\n# References\n1. https://gov.yearn.finance/\n2. https://yips.yearn.finance/YIPS/yip-0\n3. https://yips.yearn.finance/YIPS/yip-12\n4. https://snapshot.page/#/yearn";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.payload.choices = [];
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.payload.choices[0] = "Formalize the YIP introduction, voting, and implementation process as specified above.";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.payload.choices[1] = "Do not formalize the process. No changes made.";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.payload.end = 1606064400;
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.payload.metadata = {};
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.payload.name = "[YIP-55] Formalize the YIP Introduction & Voting Process";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.payload.snapshot = 11275892;
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.payload.start = 1605632400;
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.space = "yearn";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.timestamp = "1605624280";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.type = "proposal";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.msg.version = "0.1.3";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.relayerIpfsHash = "QmaoQMK6QTqSydCqEzgqbNUNW3n6KZzzUW3ZP8g3HMzVX8";
json.QmZA8zJtLPqQAHi1jMdYX9MdMQ1ZmtRP8zuHccm6HFSzpF.sig = "0x6633b332c5551378b0cdd063951ff69d76efba4987255aa2057ebb5b4acbfedf69dc1c6f98d8851abf61ef7d916c21f6e66fae2a3a5c5d74cc1c7a8bc0501c3f1c";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy = {};
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.address = "0x90D265F5780CA3d397c9B81f141177Eb50fE39bf";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.authorIpfsHash = "QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg = {};
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.payload = {};
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.payload.body = "test";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.payload.choices = [];
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.payload.choices[0] = "test1";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.payload.choices[1] = "test2";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.payload.end = 1604289600;
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.payload.metadata = {};
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.payload.name = "what?";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.payload.snapshot = 11246815;
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.payload.start = 1604203200;
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.space = "yearn";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.timestamp = "1605237172";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.type = "proposal";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.msg.version = "0.1.3";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.relayerIpfsHash = "QmZBeHiWdAfx1YKdnjshuFU2xvZA773rHJbnQ1xghqL4St";
json.QmZQMhjrRkZgqk2E49uNducyNZsi3z73jQkYCVTkwU4FDy.sig = "0x3bfc1872f6591a9dcf2ba34ec971452d167697f9ab691c0b618a7803c223f29e501f88d9ca49f06aa63af25bc52da7ceb88aa88ed08974f4a4df82a451a2c00e1b";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix = {};
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.address = "0x432af553927E974bFf4b5BFEa0A9B86a9a88B530";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.authorIpfsHash = "QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg = {};
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.payload = {};
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.payload.body = "test for voting";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.payload.choices = [];
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.payload.choices[0] = "nothing";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.payload.choices[1] = "anything";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.payload.end = 1602770400;
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.payload.metadata = {};
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.payload.name = "test";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.payload.snapshot = "11044233";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.payload.start = 1602648000;
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.space = "yearn";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.timestamp = "1602556325";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.type = "proposal";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.msg.version = "0.1.2";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.relayerIpfsHash = "QmQmCU83XxjCsiRi63EsJJAfQMuBhHpi2KLJP4sNiMiUaw";
json.QmZR9xYfp6N35xat7Lzv6DPamahys7rrjMxNL9FLSN8pix.sig = "0x53ea564312e0137522b391fc5395877f01d76721b5c2cb7b58082becec25e26d66dd8a24c2c21b009d9a1b49e4274e37be0e954703393b14f54dc08c50b8c6d21b";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L = {};
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.address = "0x0Cec743b8CE4Ef8802cAc0e5df18a180ed8402A7";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.authorIpfsHash = "QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg = {};
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.payload = {};
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.payload.body = "## Simple Summary\n\n> Increase the monthly salary of core team member Artem K (@banteg) to 150K per year (12.5k per month). This represents a ~56% increase of the current 96k per year (8k per month). The current 96k represents an entry-level compensation in the software industry. Artem's contributions are evident and are always shared publicly, and belong to the senior developer category.\n\n## Motivation\n\n> - Reward and retain talent\n> - Meet minimum industry compensation standards for a senior-level developer position\n\n## Specification\n\n> Starting the month of October 2020 Artem's salary is increased from 8k to 12.5k per month.\n\n## Rationale\n    \n >- Artem has been contributing to the implementation of yEarn products and patches, and responding to emergencies at an outstanding pace\n> - Artem work is always shared publicly which is valuable for communication and education of the community\n>- Artem has been an advocate for yEarn in the ecosystem, e.g. creating Maker proposals for the benefit of yEarn\n\n## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.payload.choices = [];
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.payload.choices[0] = "Yes, increase Artem's to 12.5k/month";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.payload.choices[1] = "No, keep the status quo of 8k/month";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.payload.end = 1601805600;
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.payload.metadata = {};
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.payload.name = "Raise the salary of core team member Artem";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.payload.snapshot = "10954411";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.payload.start = 1601513700;
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.space = "yearn";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.timestamp = "1601513797";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.type = "proposal";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.msg.version = "0.1.2";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.relayerIpfsHash = "QmPHyMEA6SETE4okXyPt3gfysKuEStSQnq9bPRFydSGGuf";
json.QmZmk2t8pjpqTF4dHmyGDvMzaSezxGSQR1yZoxLq6sPE1L.sig = "0x6528c2eb283d20bd937e7fe696147f2e5df00bc4476592923893af1fc00c63ab668171b689b40c18a7edf7eaa3ef275909dca6d19ade0937f29941e0859f57e01c";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ = {};
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.address = "0x0E7aF95de26BF10E6B9f00D846C22757aa582B9C";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.authorIpfsHash = "QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg = {};
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.payload = {};
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.payload.body = "author: Matt West (@mattdwest)\ndiscussions-to: https://gov.yearn.finance/t/proposal-create-a-ysnx-vault-to-stake-on-mintr/5241\ncreated: 2020-09-11\n---\n\n## Simple Summary\nCreate a ySNX vault with integration into Mintr and Curve to maximize return on investment and save on gas costs.\n\n## Abstract\nShould this proposal be implemented, a ySNX vault will be created. Users would deposit their SNX to the vault for deployment into both Mintr for the weekly claims and Curve with the generated sUSD. With the proposed strategy, the current APY is roughly 60% for users. Deployment of this vault would act symbiotically to improve the value of yearn, Synthetix, and Curve ecosystems together.\n\n## Motivation\nThe entire Synthetix ecosystem relies on the staking of SNX into Mintr to provide the liquidity for the generation of their synthetic derivatives. Depositors are given a weekly distribution of inflation in the form of SNX and sUSD from user trading fees. However, with the current high gas costs this is not capital efficient for smaller SNX holders, and the gas cost for their weekly claims may be greater than the claimed value. If users do not execute the claim, this reward is lost to them and paid out to other holders the following week. Furthermore, the sUSD that is generated by the minting process is instrumental for the rest of the ecosystem. This sUSD is theoretically pegged to the USD, but it is frequently valued at less than other stablecoins like USDC. By deploying the generated sUSD to Curve, this would improve the health of the sUSD peg and deliver value to all three ecosystems. Value would also be driven to YFI holders in terms of increasing governance share in Curve and Synthetix as the vault matures.\n\n## Specification\nThe strategy for this vault at its heart centers on Mintr. When users deposit SNX to the vault, they are given ySNX tokens in return. From here, the value will be split into two distributions: 90% as gSNX (the share deployed in the Mintr/Curve loop per the graphic), and 10% as sUSD. The SNX in gSNX would be deployed to Mintr, and sUSD would be generated which in turn would be deposited to the sUSD Curve pool and staked in their DAO. Every week, the contract would claim the SNX and sUSD from Mintr, which will be reinvested in Mintr and Curve respectively. By deploying the sUSD into Curve, users will extract swap fees, SNX from Synthetix, and CRV from the Curve DAO. CRV tokens will be staked in the DAO up until the maximum boost is achieved - afterwards, all CRV will be sold for SNX and redeployed into Mintr. This core loop will generate notable returns for the vault’s users.\n\nThe 10% sUSD held outside the gSNX loop serves a few key functions. The first function is to ensure that the vault is overcollateralized. Since sUSD is essentially worth 6x SNX in terms of collateralization (through it’s burning power), this would give the vault approximately 1000% collateralization ratio. If the vault needs to burn sUSD either to unlock SNX for a user’s withdrawal or to fix the collateralization ratio, it will come from this pool first. The second function the sUSD serves is to account for the valuation of the SNX that is timelocked from the weekly claims. Each week, when the contract claims the SNX, the value of gSNX will increase accordingly - therefore, more value would be moved to this 10% sUSD partition to balance the ratio. In effect this means that the average depositor will not need to wait a full year to withdraw the value of their claimed SNX. This sUSD will also be deployed to Curve and will follow the same logic as the gSNX. The CRV and SNX tokens generated will be staked in Mintr and will become part of the gSNX wrapper.\n\nThe main risk for this strategy would be in the case of a run on the vault. Should an overwhelming majority of the value of the vault be withdrawn, the timelocked SNX will become an increasing percentage of the value of the vault. At a certain point, the withdraw transactions would end up failing, as there would not be any unlocked value that could be withdrawn. The value of this vault would not be lost, it would merely be time gated. Those vault holders would in effect have their withdrawals frozen until more money is deposited into the vault, or until more SNX is vested. This risk is largest during the first year of the vault’s life, and will be drastically reduced following, as there will be a weekly cadence of unlocking SNX.\n\nAt current rates, the APY on this strategy is approximately 60%. This strategy should unlock significant value in all three protocols it interfaces with.\n\n**FOR**: Create a ySNX vault with the attached strategy\n\n**AGAINST**: No change.\n\n## Copyright\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.payload.choices = [];
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.payload.choices[0] = "For";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.payload.choices[1] = "Against";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.payload.end = 1600135200;
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.payload.metadata = {};
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.payload.name = "Create a ySNX vault to stake on Mintr";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.payload.snapshot = "10844318";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.payload.start = 1599876000;
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.space = "yearn";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.timestamp = "1599876567";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.type = "proposal";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.msg.version = "0.1.2";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.relayerIpfsHash = "QmaPWKFoz5x9ybapcodpAfNNnhqFsBes4VKje7hqAggHoL";
json.QmZt6KiD8yFfaP7bVdS4rkyn7772UVhM6UZkFvyztmHiKJ.sig = "0xbc310fa7643fd7f51432fcbd58f5bbbacb07b5557b562554f76addf077b3dfd502a23a5b9b7f82f65d11dab11e452424fdadbc18c67871f16d7742d5131eb1461c";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV = {};
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.address = "0x389Eb9f6A52265cF691d54B5fb455aae439B4719";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.authorIpfsHash = "QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg = {};
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.payload = {};
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.payload.body = "asdf";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.payload.choices = [];
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.payload.choices[0] = "asdf";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.payload.choices[1] = "asdf";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.payload.end = 1603652400;
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.payload.metadata = {};
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.payload.name = "asdf";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.payload.snapshot = 11098169;
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.payload.start = 1603479600;
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.space = "yearn";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.timestamp = "1603265570";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.type = "proposal";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.msg.version = "0.1.2";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.relayerIpfsHash = "QmQdaBErsEdCNeRmZGSiae4M2MaHreXwQwhPXoH8VBVaBx";
json.QmaHdavqGZzDpD6FuTKkAhj15YCna8V6oPVgNMCMSv8tGV.sig = "0x7e61c44620b1d3cad2e3f19b1a5a4d46849925167172d4b771c0717bd5090b9c4b4624de061a3b57a25398a4753569bef0fb3cd7957ededd0cfd4bc7bced67f41c";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe = {};
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.address = "0x13826Cc835B2F56358Df40564BAbeC128477bf54";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.authorIpfsHash = "QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg = {};
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.payload = {};
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.payload.body = "dklfjskfdsklfj";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.payload.choices = [];
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.payload.choices[0] = "ksdaksad";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.payload.choices[1] = "kdnsaknda";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.payload.end = 1601380800;
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.payload.name = "New Proposa;";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.payload.snapshot = "23233";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.payload.start = 1598875200;
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.space = "yearn";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.timestamp = "1599388360";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.type = "proposal";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.msg.version = "0.1.1";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.relayerIpfsHash = "Qmf9xPU21AaSVfaoYF5tgakKB7RxLpVYpoLwTqdUJFHXZJ";
json.QmaW3NWB3WXRKhTQXCtMoHgAX3jeo7qNwgrArWiUpiC2Qe.sig = "0xfefbfdea52d2cc7b081a7161ed0ea184c43d93532691f15a556785c89b5d7f130a23ead76a95ae3d02e28a926d72e8e82d119ec2fe4598dd1f40ff82abb08b0f1b";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV = {};
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.address = "0x7A1057E6e9093DA9C1D4C1D049609B6889fC4c67";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.authorIpfsHash = "QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg = {};
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.payload = {};
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.payload.body = "### Summary\nThis proposal bundles a few improvements together which have compounding effects. It will solve for [gas subsidy](https://gov.yearn.finance/t/gas-costs-are-too-damn-high/4655), [gitcoin grants](https://gov.yearn.finance/t/direct-of-rewards-towards-ethereum-public-goods-funding/3699), inability to convert other Curve tokens into rewards for governance stakers.\n\n### Abstract\nAdd split functionality to TreasuryVault which can send the rewards to multiple destinations before sending them to governance staking contract. Add ability to withdraw from Curve pools. Add ability to trade using Uniswap.\n\n \n### Motivation\nThere is a very good [competing proposal](https://gov.yearn.finance/t/proposal-change-vault-harvest-function-to-reward-function-caller/4726) which solves for gas refunds by modifying `harvest()` function. But here is some rationale for using TreasuryVault instead:\n1. Putting this in `harvest()` doesn't refund on failed txs, which can eat up $500 by the moment it fails\n2. Requires redeploying and migrating all strategies, which can't be done easily for the strategies yDAI and yWETH vaults are currently positioned in.\n3. Treasury contract needs upgrading anyway, I was working on a converter and reward distribution bot and was stuck with OneSplit not being smart enough to unwrap Curve LP tokens.\n4. We'll be able to solve converting other assets finally and distribute the rewards accumulated from vaults other than yUSD.\n5. We can bundle this with gitcoin proposal, which is time-sensitive, since the next round starts on September 15th.\n\n### Specification\n1. Develop and deploy a TreasuryVaultV2 contract with these additional features:\n   - Ability to whitelist additional [CurveDeposit](https://www.curve.fi/contracts) contracts when more pools are created.\n   - Unwrap into underlying Curve LP coins or a single coin (CurveDeposit has us covered here).\n   - Trade via Uniswap in addition to OneSplit, this helps immensely with testing and optimizing the bot which does the trading.\n   - [Disperse](https://disperse.app)-like split functionality which can send different amounts to multiple recipients.\n   - The split functionality should also call `notifyRewardAmount` when it sends rewards to `ygov`.\n2. This proposal will require some additional work for gas accounting, which can be delegated to a bot.\n\n### Urgency\nGiven the gas costs are eating through our budget at $25k/day rate, I propose to have an expedited vote for this with a 1-day duration. We should have the implementation ready shortly after.";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.payload.choices = [];
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.payload.choices[0] = "Implement the proposal";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.payload.choices[1] = "Reject the proposal";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.payload.end = 1599310800;
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.payload.name = "Upgrade Treasury Vault to solve gas subsidy, gitcoin and more ";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.payload.snapshot = "10795022";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.payload.start = 1599224400;
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.space = "yearn";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.timestamp = "1599224741";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.type = "proposal";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.msg.version = "0.1.1";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.relayerIpfsHash = "QmcjqGQLJ4xfoieNxEFGSUEgB3uKvduM4PRJTDizETVKn2";
json.QmaWoU9y6P1P7FTc4dH8gwoorwdMXM2oZbGLGRePM3MfUV.sig = "0xa3b6625211b34c7b87054201ce92bc10c9d4c0944c86165cefffaeb25adcf8420b9b0a550b5fe8d3e337300c76f7e9b88fb4641a1292edce144d84eb65edbf231b";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU = {};
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.address = "0xdb0c72690ef2392AA8cc87823E5B6f005e8b75b4";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.authorIpfsHash = "QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg = {};
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.payload = {};
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.payload.body = "testing";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.payload.choices = [];
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.payload.choices[0] = "hello";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.payload.choices[1] = "testing";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.payload.end = 1602864000;
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.payload.metadata = {};
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.payload.name = "Testing";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.payload.snapshot = "11059817";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.payload.start = 1602172800;
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.space = "yearn";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.timestamp = "1602757776";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.type = "proposal";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.msg.version = "0.1.2";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.relayerIpfsHash = "QmZXn5hFpbhQsPPnqY4Qoud9FDv9XAFoRw9v7HgBfig9DH";
json.QmamcXSvaEvt2PMJMtMQoDutc99b2LwZmZbLVxSyd8SbvU.sig = "0xd65221b730d4ab958f0cf5f7dd9a8e485ac2f1c4bf2437747f9816cbddc8cea364a033e2a9ffa595f4c21e6437a2b75cb348670a85716c758065fbc39b764f891b";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ = {};
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.address = "0x1aDdbb6462CB45c91f0dD116C6480AA586dE0a29";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.authorIpfsHash = "Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg = {};
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.payload = {};
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.payload.body = "Hello ";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.payload.choices = [];
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.payload.choices[0] = "YES";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.payload.choices[1] = "NO";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.payload.end = 1601463600;
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.payload.metadata = {};
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.payload.name = "Test";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.payload.snapshot = "1234";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.payload.start = 1598958000;
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.space = "yearn";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.timestamp = "1601314361";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.type = "proposal";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.msg.version = "0.1.2";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.relayerIpfsHash = "QmPsjVm2Azcrk2qDgot9C32jjMn4CDDgnPZWbXBZQVFS7X";
json.Qmb4HbWHGTaBg6xBiEGbkeZWRv6GCHZCMEkTgYRfBm8XVQ.sig = "0x72e39efaa00b098fdeccc86f6ae1c07da817b1207219b9c33903e509e4eece23651bc81ad6666a52a16c26b22c9e21902c6eebcc2e0c96717f7b955f5a453b9f1b";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ = {};
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.address = "0x7A1057E6e9093DA9C1D4C1D049609B6889fC4c67";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.authorIpfsHash = "Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg = {};
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload = {};
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.body = "## Authors\n@banteg, @lex_node, @lehnberg, @milkyklim, @RyanWatkins, @tracheopteryx\n\n## Summary\n\nUse YFI staking rewards to buy back YFI on the open market. Use bought back YFI for contributor rewards and other Yearn initiatives. Retire the YFI governance vault as it no longer has a use, opening up for it to be replaced in the future with a regular vault. Make it possible to participate in Governance even if one's YFI is being used elsewhere.\n\n## Abstract\n\n**If adopted**, this proposal seeks to:\n1. Replace YFI staking rewards with YFI buybacks, until further notice.\n2. Enable YFI that's actively being used in ways that bring benefit to Yearn to participate in Governance.\n3. Retire the YFI governance vault (yGov). \n\nThis **benefits Yearn** as a whole by:\n* Simplifying Treasury design and operation.\n* Simplifying YFI token mechanics to equally align interests across Yearn stakeholders. \n* Builds up a treasury of YFI that can be deployed through Governance for various uses.\n\nThis **benefits YFI holders** in particular by:\n* Removing the need to stake YFI to enjoy rewards; in contrast to staking (which only benefits stakers), buybacks should benefit every YFI holder.\n* Potentially making gains more tax efficient as capital appreciation through buybacks could be taxed less than dividend income through staking rewards.\n* Allowing participation in YFI Governance even whilst the YFI tokens are utilized elsewhere, for example providing liquidity in SushiSwap.\n\n## Motivation \n\n### Previous proposals\n\nThis proposal comes on the back of previously made proposals and YIPs: \n* The adoption of YIP-54[[1]](#References) formalized an Operations Fund and allowed for discretionary YFI buybacks.\n* @RyanWatkins proposed a rethink of Yearn’s capital allocation strategy.[[2]](#References) Arguing for protocol rewards to be used to buy back YFI rather than to reward YFI stakers, distributing protocol income as dividends would be a suboptimal capital allocation strategy given Yearn’s stage of maturity. Instead, the proposal claimed it would be more optimal to use income to drive growth and asset appreciation instead.\n* @dudesahn called for the existing Governance vault and strategy to be replaced with more conventional investment strategy.[[3]](#References) Utilizing MakerDAO to mint DAI, this would be used for liquidity mining. One part of the returns would be rewarded to stakers, and the other would be used to fund Yearn's Bug Bounty program and yAcademy.\n* Joel Monegro (Placeholder VC) recently published the essay “Stop Burning Tokens – Buyback And Make Instead”[[4]](#References) where he suggested that protocols should buy back and reissue tokens to incentivize growth rather than buying back and burning tokens to return value to token holders. This buyback strategy could be especially well suited for Yearn as the YFI supply is capped at 30,000, meaning that the initial conditions for Yearn’s wealth distribution have been set, and no YFI can be further issued to incentivize growth. Such a “Buyback and Make” strategy could allow Yearn to receive the benefits of YFI inflation without any inflation.\n\n### Rationale\n\n![ryan-fees-earned](https://user-images.githubusercontent.com/4562643/104811569-90ace080-580d-11eb-9d1f-6ee5b7a09dd6.png)\n\n_Figure 1. Staking rewards earned over time (USD).[[5]](#References)_\n\n#### Replace staking rewards with buybacks\n* **More suitable at this stage in the lifecycle.** It is unconventional to pay out returns in the form of staking rewards this early in a project's lifecycle. Typically this would happen at a stage where funds no longer can be allocated efficiently.\n* **Better aligns with YFI's use case.** YFI is primarily intended to be used for the governance of Yearn. Token mechanics should cater to those who take interest in the protocol and wish to actively participate in its improvement, over those looking to passively collect staking income.\n* **Potentially more tax-efficient for YFI holders.** The gains on YFI staking may be treated as ordinary income. In contrast, a buyback program enables growth in YFI while YFI holders should only be taxed on a capital gains basis for a sale. Results may vary by jurisdiction and this does not constitute tax advice; consult your own tax advisor. \n* **Recycles YFI that can be spent through Governance.** The resulting accumulation of YFI in the Treasury could enable future governance proposals on the use of this YFI for the further benefit of Yearn.\n\n#### Widen YFI accepted for Governance voting\n* **Acknowledge more uses of YFI for the benefit of Yearn.** There are other ways than holding YFI in your wallet that can benefit Yearn, for example by providing liquity to a YFI pair on SushiSwap. These YFI are not allowed to vote in Governance today, but they should be.\n* **Remove capital efficiency and governance trade-offs.** Similarly, there shouldn't need to be a trade-off between participating in Governance or utilizing YFI efficiently.\n\n#### Retire the yGov vault\n* **Vault no longer needed.** Without staking rewards, there is no need for a yGov staking vault that's tied to Governance.\n* **Staking returns are aenemic.** At the time of this writing, the APY estimate is 0.9% annually [[6]](#References). This is not competitive, and may even dissuade YFI holders from participating in governance. In comparison, Binance recently announced up to 4.49% APY for staking YFI.[[7]](#References).\n\n### Future possibilities\n* Introduce contributor retention program, with vesting YFI rewards to create long term skin-in-the-game for existing and new contributors.\n* Re-introduce dividends once Yearn has matured and protocol income no longer can be re-invested as efficiently into growth.\n* Introduce a conventional vault for YFI, using the v2 vault design. Such a vault would not be related to governance or staking rewards, and would be free to pursue other, to-be-determined strategies.\n\n## Specification\n\n### Replace staking rewards with buybacks\n\n#### Buy back YFI\n* All funds that are used for YFI staking rewards are to be used to buy back YFI. Staking rewards cease until further governance action.\n* Buybacks should be handled in a continuous and automated way, and not be discretionary or requiring any sign-offs.\n* Care should be taken to avoid creating arbitrage or front-running opportunities. Detailed specification of design is left to the developers implementing.\n\n#### Use of bought YFI\n* There are no changes in how funds are spent.\n* The YFI bought back flows into the Operations Fund established by YIP-54 and can be spent accordingly.\n* Example of current spends include: Security audits, Bug bounties, Contributor funding, Grants, Gas reimbursment, Development overhead. See the recently published quarterly financial report[[8]](#References) for a detailed breakdown.\n\n### Widen YFI accepted for Governance voting\n* Link snapshot to use guest-list[[9]](#References) to determine which YFI is eligible for voting.\n* This functionality is already supported and excludes protocols such as Aave which could be utilized in governance attacks. The list of supported protocols is configurable and is being reviewed continuously, improvements and suggestions can be submitted to the repo.\n* Any YFI in the Yearn Treasury / Operations Fund is not eligible to vote.\n\n### Retire YFI Governance vault\n* Retire the ygov.finance[[10]](#References) staking vault and the YFI yVault YFIGovernance strategy that relies on it.\n\n## Changelog\n- Jan 13: Clarified voting specification to explicitly state that YFI in the treasury cannot be used to vote. [DL] \n\n## References\n1. https://gov.yearn.finance/t/yip-54-formalize-operations-funding/\n2. https://gov.yearn.finance/t/proposal-rethinking-capital-allocation/\n3. https://gov.yearn.finance/t/proposal-yfi-governance-vault-yacademy/\n4. https://www.placeholder.vc/blog/2020/9/17/stop-burning-tokens-buyback-and-make-instead\n5. Data available upon request.  \n6. https://stats.finance/yearn\n7. https://www.binance.com/en/support/announcement/de1dfcb0846a422a9d1f50f98ee0e8b8\n8. https://github.com/iearn-finance/yearn-pm/blob/master/financials/reports/2020Q3-yearn-quarterly-report.pdf\n9. https://github.com/banteg/guest-list\n10. https://ygov.finance/";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.choices = [];
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.choices[0] = "Yes";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.choices[1] = "No";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.end = 1611072000;
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata = {};
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies = [];
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[0] = {};
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[0].params = {};
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[0].params.decimals = 18;
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[1] = {};
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[1].params = {};
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[1].params.decimals = 18;
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.name = "BABY: Buyback and Build Yearn";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.snapshot = "11667095";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.payload.start = 1610812800;
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.space = "yearn";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.timestamp = "1610814823";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.type = "proposal";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.msg.version = "0.1.3";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.relayerIpfsHash = "QmZZf7JkaU31m3V6twEBtUsJ1sPfJ3q88KJZMk2YoPEtTi";
json.Qmb6gBzjvgLMazSrQQGVcjutLNdkVyM2Lh6yckMzdoaHWZ.sig = "0x3866fd79a85393471a53374dac72aab4960d89de2bd8df590d54ec26c050ae0927fcf34c2a274611fbd44349d8fb993ec2cb14c553d293268723ff8bf804311d1c";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3 = {};
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.address = "0x0Cec743b8CE4Ef8802cAc0e5df18a180ed8402A7";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.authorIpfsHash = "QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg = {};
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.payload = {};
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.payload.body = "## Authors\n@banteg, @lehnberg, @milkyklim \n\n## Summary\n\n-   With 97.5% of the Vault's performance fee going to the Yearn treasury, Strategists have barely any skin in the game–**39x less than Yearn's Treasury** to be precise.\n-   Such a misaligned balance of interests does not make it attractive for Strategists to build on Yearn. This could turn into an **existential threat** to the protocol.\n-   This proposal sets Yearn and Strategists out to be **equal partners** in the success of a Vault, with each allocated an even share of the 20% performance fee:\n    - Treasury allocation: 10%\n    - Strategist: 10%\n\n\n## Background\n\n### What is Yearn's competitive edge?\n\n#### Yearn as an aggregator\nYearn is often referred to as a \"Yield aggregator\", in the context of Ben Thompson's Aggregation Theory[[1]](#References). \n\n![Aggregation Theory](https://stratechery.com/wp-content/uploads/2015/07/Screen-Shot-2018-03-27-at-12.47.09-PM.png)\n\nSimilar to Google for search, Facebook for social, Netflix for movies, Airbnb for holiday rentals, and Uber for rides, the idea is that Yearn should be the go-to source for users who want to earn the best and most predictable ROI on their DeFi investments.\n\nUnlike these big tech companies however, there are some important differences in the case of Yearn as an aggregator:\n\n* **The code base is open source.** If Yearn solves a hard problem, this means that others can now solve it too. The code base itself is not the competitive moat that it is for other aggregators. As we've seen it's straightforward to create forks/clones and launch competitors to Yearn.\n* **There is no stickiness.** Aggregators have different degrees of stickiness. The Facebook Social Graph is extremely hard to replicate and makes it very difficult for users to switch to a competitor. While it's easy to switch to a Netflix competitor, they will miss out on exclusive original Netflix content so it comes at a cost. Uber's driver pool and Airbnb's housing stock is less unique and easier for its competitors to bootstrap or poach, but is still not trivial to replicate. Yearn on the other hand has no systemic stickiness. It does not even require canceling a subscription, or closing of an account. In the DeFi space, money flows to where it earns the best and most predictable returns. \n* **What's on offer is ever changing and not  easily commoditized.** The aggregators turn \"the hardest problem digitized\" into a commodity. For Facebook it is news articles and social content. For Netflix it's movies and tv-shows. In the case of Yearn, this would be yield-producing investment strategies. _But these cannot be easily commoditized:_ \n   * As soon as a strategy goes live, it can be replicated by competitors, thus affecting its performance.\n   * As more capital flows into the strategy, it can become harder to realize the same opportunities, thus affecting its performance.\n   * As time passes, a successful strategy will lose its alpha as the rest of the market adapts in response, thus affecting its performance.\n\n#### Yearn's Gingerbread Man strategy\n\nWhen Snap filed to go public, they wrote in their S-1 filing:\n\n> In a world where anyone can distribute products instantly and provide them for free, the best way to compete is by innovating to create the most engaging products. That’s because it’s difficult to use distribution or cost as a competitive advantage—new software is available to users immediately, and for free. We believe this means that our industry favors companies that innovate, because people will use their products.\n\nThis triggered the same Ben Thompson to quip that Snap was pursuing a Gingerbread Man strategy[[2]](#References):\n\n> Run, run, run as fast as you can.\nYou’ll never catch me, I’m the gingerbread man.\n\nThis applies well to describe Yearn and the  advantage it has over its competition. It's not the total value locked. It's not the APY returns. It's the ability to ship more innovating products, that are more secure and better performant than anything else on the market. This at a faster pace than the competition can keep up with and try to imitate.\n\n#### Yearn's edge is the collective brain power it attracts and can retain building for it\n\nIf Yearn's business is aggregating yield-bearing strategies, its Strategy creators are the equivalent of Uber's drivers. **Strategy creators are however very different from Uber drivers.** They have much more unique skill sets, making them harder to replace, and more important to retain.\n\n### A Strategist's choices\nSomeone who develops an investment strategy that results in a positive yield has the following choices today: \n\n1. **Work for Yearn.** Partner up, work with protocol devs to integrate Strategy in a vault, hope for launch with a large influx of capital, be compensated as part of the performance.\n2. **Create competing project or work for a competitor.** Either launch a competing project to Yearn, or work for an existing competitor, in the hopes of earning more fees.\n3. **One man wolf pack it.** Deploy strategy solo, perhaps raising funds from friends and family, and keep all the fees.\n\nIn order for Yearn to remain competitive over the long term, the best and the brightest strategists must consistently choose to work with Yearn. This an existential question, necessary in order to ensure the long term sustainability of the protocol.\n\n### How are strategists rewarded today?\nThe next version of Yearn vaults will launch with a two-pronged fee structure[[3]](#References):\n   1. A 2% management fee levied on AUM that goes to the Treasury;\n   2. A 20% performance fee levied on returns from the vault, which is split as follows:\n      * 19.5% to the Treasury\n      * **0.5% to the Strategy creator**\n\nStrategists are expected to cover their own development, testing, gas, and monitoring costs. Under the current allocation, Strategists are not breaking even at times.[[4]]() \n\n## Motivation\n\n### Why not share the management fee?\n* **The protocol requires predictable income.** There are a lot of constant costs on the protocol side. Operations, Development, maintenance, and R&D. These require a stable source of funding and should not be affected by Strategists.\n* **Survival of the fittest.** Strategists should \"eat what they kill\", rewarding only the most ambitious and best performing, filtering out the rest. \n\n### Why split the fee equally between Treasury and Strategists?\n\n* **Establishes a partnership.** The message is clear: Yearn and Strategists are in this together, and it's a symbiotic relationship, where both are held accountable and are equally responsible for success.\n* **Acquisition.** Creates success stories of high earning Strategists that will make it more aspirational and attractive for others to become Strategists.  \n* **Retention.** Strategists with a lot of skin in the game will work and further Yearn as opposed to  a competitor.\n\n### Future possibilities\n\n**Tiered fee system.** As the Strategy creation space matures, there could be justification to distinguish between different qualities of strategies, creating a tiered system that rewards a different share of the performance fee based on the novelty and the sophistication of the strategy, as  proposed in [[5]](#References). At this stage, it's recommended to keep a simple structure that is easy to reason about and for Strategists to understand the appeal of. This should be revisited in the future when needed. \n\n### Comparing allocations\nDrawing from the backtesting data produced in [[6]](#References), below is the Vaults V2 fee model applied to the yUSD vault, showing the difference in earnings between Strategists and Yearn treasury between allocation models.\n\n#### Previous allocation\n![Previous model sankey](https://i.ibb.co/YdnDHmV/sankeymatic-2400x1400.png)\n\n#### Proposed allocation\n\n![Previous model sankey](https://i.ibb.co/9pNCTqw/sankeymatic-2400x1400-2.png)\n\n#### Comments\n\n* The previous allocation to Strategists is disproportionately small compared to the value created by them.\n* In the proposed allocation, the **Yearn treasury receives 64% of all fees** as it is paid the entirety of the management fee.\n* The Strategist now earns a sizable reward that is entirely based on performance. \n\n## Specification\n\n### New performance fee structure\n\n-   20% performance fee\n    -   10% allocated to Treasury\n    -   10% allocated to the Strategist\n\nThe Strategist is expected to pay for all expenses incurred, including those of development, testing, gas, monitoring, and operation.\n\n## References\n\n1. https://stratechery.com/concept/aggregation-theory/\n2. https://stratechery.com/2017/snaps-apple-strategy/ \n3. https://snapshot.page/#/yearn/proposal/QmSaYHR97LDMDvg9xeTfdNZw6aqL9njxBKM6JVFtCYxKvB\n4. https://gov.yearn.finance/t/proposal-increase-strategist-rewards/7299/8\n5. https://gov.yearn.finance/t/proposal-increase-strategist-rewards/7299/10\n6. https://gov.yearn.finance/t/restructure-fees-and-align-incentives/\n";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.payload.choices = [];
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.payload.choices[0] = " Accept proposal";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.payload.choices[1] = "Reject proposal";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.payload.end = 1605162000;
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.payload.metadata = {};
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.payload.name = "[YIP-52] Make Strategist Skin in Game Partner for Make Benefit of Glorious Brain of Yearn ";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.payload.snapshot = 11224799;
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.payload.start = 1604945400;
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.space = "yearn";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.timestamp = "1604944809";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.type = "proposal";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.msg.version = "0.1.3";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.relayerIpfsHash = "QmTYL6B5v2Dw67XFKv5TpH2AxEBWM5Ac1RZrK9u9VyY2DK";
json.QmbAq6jPB6ocrihjkDo5TLNF4D4w9dw1HsEsJ7vwdwd9g3.sig = "0x6f5d4fc597c17fbf01f9ec5933465db0b48151b37612e23defff39be68d20a75205e4aab97ed7874a4948ba66ddbf17a3cc09197c3c162ce44c6a91e88d993ee1b";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb = {};
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.address = "0x0Cec743b8CE4Ef8802cAc0e5df18a180ed8402A7";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.authorIpfsHash = "QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg = {};
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.payload = {};
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.payload.body = "**Summary**:\n\n> * Adopt a standard code of conduct template across the entire project.\n> * Encourage moderators to organise their own governance independent of project leadership.\n\n\n**Abstract**:\n\n\n> In order to nurture its growing community, and to make it easier to moderate in a fair and predictable manner, Yearn should adopt a project-wide code of conduct.\n>\n> Instead of reinventing the wheel, adopt a standard that is already used by large open sources projects such as  Golang, Linux, React, Vue.js, and [many more](https://www.contributor-covenant.org/adopters/).\n>\n> If this proposal passes, Yearn will adopt the latest version of the [Contributor Covenant](https://www.contributor-covenant.org/version/2/0/code_of_conduct/) for all contributors to Yearn related repositories, forums, chats, communities, and events. Moderators across the project will work to uphold its standards and carry out enforcement actions as specified in it.\n>\n> See the [related FAQ](https://www.contributor-covenant.org/faq/) for answer to common questions about the Contributor Covenant.\n>\n> Moderators should begin to self-organize and discuss enforcement processes.\n\n**Motivation**:\n\n> Without a code of conduct, it is unclear what kind of language and behaviour is tolerated in Yearn's community.\n>\n> It makes enforcement arbitrary and subjective, complicating fair and appropriate moderation.\n>\n> Having a code of conduct makes it clear for community members what is acceptable behaviour, and what to expect when there are violations.\n>\n> Having a code of conduct as a \"constitution\", enables moderators to become autonomous and independent from the project's leadership team, as they can enforce its spirit without their involvement. This leads to less involvement of project leaders in moderation decisions, which leads to fewer accusations of abuse of power, censorship, or bias.\n\n**Specification**:\n\n> 1. Verbatim adoption of the Contributor Covenant.\n> 1. Host on the yearn.finance website, with links to it from all relevant repositories in `CODE_OF_CONDUCT.md` files.\n> 1. Gather moderators together and work on enforcement, communication channels, and processes. \n> 1. Aim to create a separate moderation team that is independent of project leadership.\n";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.payload.choices = [];
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.payload.choices[0] = "Yes, let's adopt the proposed Code of Conduct";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.payload.choices[1] = "No, let's make arbitrary moderation decisions";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.payload.end = 1602669600;
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.payload.metadata = {};
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.payload.name = "Adopt a Code of Conduct";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.payload.snapshot = "11009160";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.payload.start = 1602064800;
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.space = "yearn";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.timestamp = "1602081414";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.type = "proposal";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.msg.version = "0.1.2";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.relayerIpfsHash = "QmSd7TwVcaGirmhUBYmUkF3y3eaACczxS1ac4iqCh2541N";
json.QmbJd5rCsKbNY2anBHc1uN9hgdyrNn3wi2qozVm4WQAitb.sig = "0xb309fa0d0404f4313b4266db32016cc956f88f6b89ff160b13815fc1cce416103fb6ce59f664a20e6eff16b7318f17556ed0a8298c2199e1d71d8aaa320cfef91c";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.address = "0x7B0Cd0FBa3Ab093EfE11Bd44Fd97A7062463E9e1";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.authorIpfsHash = "Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.body = "sdf";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.choices = [];
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.choices[0] = "sdf";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.choices[1] = "dsf";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.end = 1614272400;
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies = [];
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[0] = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[0].params = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[0].params.decimals = 18;
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[1] = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[1].params = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[1].params.decimals = 18;
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2] = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].name = "delegation";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.strategies = [];
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.name = "sdf";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.snapshot = 11907843;
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.payload.start = 1612371600;
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.space = "yearn";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.timestamp = "1614010300";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.type = "proposal";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.msg.version = "0.1.3";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.relayerIpfsHash = "QmSJURoYw2Lx271sCz2qunTAFWHaZZ42sbTBiLcWDBZ6XZ";
json.Qmbbnuc6gRW4kKpMnSHNq7V3fWCwHQpMzuvQW2ioXZ28Ud.sig = "0xd87368275065b201cf77defc6ddef0143c944dd3ad8e5e016559bf11261194010674f0ba00a21b76cfe0ead83ca765db63ecb2c07910c002afaeaa7a8692f2f61c";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.address = "0x3B2cba3423199f73924AD609fa8EeC504E1FaC1f";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.authorIpfsHash = "QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.body = "Authors\n@macarse\n\nSummary\nYearn v2 comes with a 2% mgmt fees on AUM.\nYearn gov should ramp up mgmt fees slowly as vault’s AUM grow up to the 2% max.\n\nBackground\nWith the introduction of Yearn V2, vaults come with a default 2% mgmt fees on assets under management. This is done at the Vault.vyper code.\n\nMotivation\nWhile vaults are starting up and first harvests are done, these fees are very aggressive for holders. Yearn gov should ramp up mgmt fees slowly.\n\nFor example, it’s been 10 hs since the yvHegic vault was released. Since the vault requires 888k Hegic to do the first investment, holders are affected by mgmt fees without getting any profit.\n\nSpecification\nVaults should start with 0% mgmt fees and gov should increase 0.5% every $1m AUM up to the max of 2%.\n\nFor example:\nDay 1: yvHegic vault is released with 0% mgmt fees.\nDay 2: yvHegic vault grows to $2m AUM, gov increases mgmt fees to 1%\nDay 3: yvHegic vault grows to $10m AUM, gov increases mgmt fees to the max of 2%\n\n\nVote\nFor: Yes, change mgmt fees.\nAgainst: No, reject the proposal.\n\n";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.choices = [];
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.choices[0] = "Yes";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.choices[1] = "No";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.end = 1612461600;
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies = [];
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[0] = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[0].params = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[1] = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[1].params = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2] = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].name = "delegation";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.name = "YIP-58: Adaptive mgmt fees based on AUM ";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.snapshot = 11753016;
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.payload.start = 1612116000;
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.space = "yearn";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.timestamp = "1611956694";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.type = "proposal";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.msg.version = "0.1.3";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.relayerIpfsHash = "QmZrWZJ9jsc9hgA45uPw7evPBuMe7bLExmiFvZdEWdjARx";
json.QmbhnqNe1T5bUk1Tmmash91egHPhX4zHsp87iRkY5uccsw.sig = "0xdc775e2771962c13541a2ff9f2c29177b3b40ba89be39809d653f96b16a03c827cff78fb0285e39b02eac541ef0e273a986c341b3676f122c8369c277687c3ab1b";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.address = "0xCE2329e61911a9872D346140dD5B813fcf9a3c3A";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.authorIpfsHash = "QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.body = "sdfsdf";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.choices = [];
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.choices[0] = "sddsf";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.choices[1] = "sdfsdfsdfsdf";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.end = 1617094800;
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies = [];
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[0] = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[0].params = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[1] = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[1].params = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2] = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].name = "delegation";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.name = "dsfsdfds";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.snapshot = 12000044;
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.payload.start = 1614765600;
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.space = "yearn";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.timestamp = "1615235451";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.type = "proposal";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.msg.version = "0.1.3";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.relayerIpfsHash = "QmYovJdjZY88DCaehiwQeagtR43JFRsNFmRScG4DoBDWoZ";
json.QmcxPVm2SyTzDqcdXZyMW1wHL6Sp1Lv15HVbtKhY42ncYQ.sig = "0x9345ad08f23b634d845d1cfaaa0e148f1abc358b1f45dc2c719ab9abc1acc5b93eabbe8a634fc677df2cab24babf701d50fa46b271814acb622defb02c6de8a71c";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN = {};
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.address = "0x2D407dDb06311396fE14D4b49da5F0471447d45C";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.authorIpfsHash = "QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg = {};
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.payload = {};
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.payload.body = "Summary:\n\nProposal to introduce an admin fee. This would introduce a new admin fee to be distributed to veCRV holders. This will decrease rewards to LPs\n\nThis ensures all Curve stakeholders benefit from an increase in volume on Curve and it brings an additional valuable feature to being an active member of governance and CRV holder.\n\nSpecifications:\n\nIntroduce an admin fee\n\nThe admin fee would then be directed to veCRV holders, a discussion with two options on how to do so will be added in the coming hours which will then also be voted on the signalling tool.\n\nThe maximum current admin fee is 50% of the current trading fee of 0.04%.\n\nSelecting 50% means you wish to see an admin fee of 0.02%\nSelecting 25% means you wish to see an admin fee of 0.01%\nSelecting 10% means you wish to see an admin fee of 0.004%\nSelecting 0% means you are against the introduction of an admin fee\n\nRead more about this proposal: https://gov.curve.fi/t/cip-7-add-a-0-02-admin-fee-to-be-distributed-to-vecrv-holders/255\n\nPlease note: This is a signalling tool, proposals will need to be validated by the DAO on-chain.";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.payload.choices = [];
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.payload.choices[0] = "50% admin fee";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.payload.choices[1] = "25% admin fee";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.payload.choices[2] = "10% admin fee";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.payload.choices[3] = "0% admin fee (no change)";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.payload.end = 1599048000;
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.payload.name = "Should an admin fee be introduced to Curve Finance?";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.payload.snapshot = "10766034";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.payload.start = 1598788800;
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.space = "yearn";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.timestamp = "1598841765";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.type = "proposal";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.msg.version = "0.1.1";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.relayerIpfsHash = "QmdAGXjSbTgjZFYm656zLPp7GTD6bPK3LxHodoQn7q2Pta";
json.QmczGZpyDJxWHzm5AaBE2FmEsBLsA9UGyFh1ZQ5tDHchqN.sig = "0xa621a69fbab0ff6e5fd0dcbb5ce9824273642a8e543e8be8dd6a54e83845b8180224e5a27a706895ac4c51b7d7a2587cc794a3165094d9f6e4a9e5ee29edc24f1c";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.address = "0xCE2329e61911a9872D346140dD5B813fcf9a3c3A";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.authorIpfsHash = "Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.body = "sdfsdf";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.choices = [];
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.choices[0] = "dsf";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.choices[1] = "sdf";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.end = 1617181200;
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies = [];
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[0] = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[0].params = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[0].params.decimals = 18;
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[1] = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[1].params = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[1].params.decimals = 18;
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2] = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].name = "delegation";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.strategies = [];
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.name = "dsfdsf";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.snapshot = 12000039;
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.payload.start = 1614852000;
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.space = "yearn";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.timestamp = "1615235400";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.type = "proposal";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.msg.version = "0.1.3";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.relayerIpfsHash = "QmY5X4sEGJ65gYmct7Zw1q3fxfsZ7NkRsG6RxD6bXU181W";
json.Qmd8k8SAKP75UsaL5WFqVbJkK8o2TbrkURXv9VxZKxe7UX.sig = "0xb49e9caf8a47b4d7397e0f4bb2ed120ec5723894f67e8d5ed4c2b99876b8d61516e01cff20ba9fbab20c4992b617b7b4c57032470010ac100dc57070d734ebf41b";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv = {};
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.address = "0x43D05363a77662C94A9468c69972259c183A4B1B";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.authorIpfsHash = "QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg = {};
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.payload = {};
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.payload.body = "Test";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.payload.choices = [];
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.payload.choices[0] = "yes";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.payload.choices[1] = "no";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.payload.end = 1601380800;
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.payload.metadata = {};
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.payload.name = "Goyal";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.payload.snapshot = "343434";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.payload.start = 1600084800;
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.space = "yearn";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.timestamp = "1600171759";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.type = "proposal";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.msg.version = "0.1.2";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.relayerIpfsHash = "QmdGRhwNGZNxKjW8NenHAxJyNZDKdG9gDfe7KX9X6VWNEm";
json.QmdEVNm5auGGUXhkzSHJarDNMujs2r9uxwmmTQ1AXpjVvv.sig = "0x2e8d1c62d866e7cb9e95dacf402303cd378d0769777a6ebad40c2bf1c2aa005b647f24c97819783be5dfc132cad9bd85f6963043f6c11433af094d6bcbc3d55d1c";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3 = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.address = "0x7A1057E6e9093DA9C1D4C1D049609B6889fC4c67";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.authorIpfsHash = "QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.body = "## Author\n@lehnberg\n\n## Summary\nExtend Multi-sig powers by another three months until end of May 2021 whilst an in-progress replacement  proposal matures further.\n\n\n## Abstract\n\n**If adopted**, this proposal seeks to extend the existing Multisig empowerment as was established by YIP-41[[1]](#References) for another **three months** until **May 24 2021**. This is done in order for a currently in-progress governance architecture proposal to mature further, and ultimately have longer time to be discussed in the community, prior to it being proposed. \n\n## Rationale\n\nThe existing mandate expires on February 24 2021. As is stated in YIP-41, the Multisig was empowered for rapid decision making until the protocol transitioned to a \"multi-DAO structure\". A plan to decentralize power away from the Multisig, led by @tracheopteryx, is in-progress of being finalized. It has been delayed due to  recent Governance activities.\n\nThe three month extension would be used to introduce the proposal to the wider community, iterate on it further to incorporate feedback, without being rushed by the somewhat arbitrary deadline that the mandate expiration sets.\n\n### Alternatives considered\n\n#### Rush the new governance proposal\n\nOne alternative would have been to instead publish the current draft of the proposal as is, and hurry to have it adopted by YFI voters before the existing empowerment expires on February 24. The outcome of this process is uncertain. It is likely to result in a less mature YIP being adopted, if one is adopted at all.\n\n#### Let mandate expire, replace with some alternative \n\nAnother alternative would be to let the Multisig mandate expire, and be replaced by some other Governance alternative. It is unlikely that a feasible alternative solution could be devised, proposed, and finalized in the little time that remains before expiry.  \n\n## Specification\n\n* Extend the current Multisig authority and remit as was granted by YIP-41 for an additional three months, expiring on **May 24 2021**.\n* **Do not** change or modify the existing mandate in any way.\n* Any changes made by YIPs adopted after YIP-41 still apply.\n* Further changes to the mandate can be made through Yearn's Governance process.\n\n## References\n\n1. https://yips.yearn.finance/YIPS/yip-41";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.choices = [];
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.choices[0] = "Yes";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.choices[1] = "No";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.end = 1614137100;
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies = [];
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[0] = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[0].params = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[1] = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[1].params = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2] = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].name = "delegation";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.name = "YIP-59: Temporarily extend Multisig empowerment";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.snapshot = 11884857;
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.payload.start = 1613705100;
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.space = "yearn";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.timestamp = "1613705126";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.type = "proposal";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.msg.version = "0.1.3";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.relayerIpfsHash = "QmTij6oXx6EkR8rRtrmXmycKEJPqsz3qPM5QBpSju6vzME";
json.QmdRCXH6BQpNcucoZqAtS5hQKjckE2428qiZoWjxmJXbs3.sig = "0xadd40d6aed60881fb88c58402049c3b6a78da276abafe465de573750b2abd9e300a74c2d637d17caecb941de96ee79b5c138d20715fa6c15d2b996a4f70e7dce1c";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva = {};
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.address = "0x8820768CAEDC113BA97dD749d948Ad0FD91c52b6";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.authorIpfsHash = "QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg = {};
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.payload = {};
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.payload.body = "heres my prop";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.payload.choices = [];
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.payload.choices[0] = "rainy";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.payload.choices[1] = "sunny";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.payload.end = 1606507200;
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.payload.metadata = {};
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.payload.name = "what is the weather";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.payload.snapshot = 11237879;
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.payload.start = 1605729600;
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.space = "yearn";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.timestamp = "1605118502";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.type = "proposal";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.msg.version = "0.1.3";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.relayerIpfsHash = "Qmbp9bWmMJSb9zt1feYK3ijK5zbgm3PCc6Y8eNnjpApxWW";
json.QmdbX3Tcy8ah6rNQNE5oA92H6TrkT1XxgXGiJBvWWc8nva.sig = "0x8f64b719115bee1631d060222a09c47d769c978f695465a07677629c274a1463376db8ad3987cc9122f1952174d67069a1db4fe5a093baa6100ed464fe7049751c";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp = {};
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.address = "0x7A1057E6e9093DA9C1D4C1D049609B6889fC4c67";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.authorIpfsHash = "QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg = {};
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.payload = {};
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.payload.body = "This proposal would require Andre Cronje to claim the Gucci sliders sent to him by Learn Yearn and upload PoG. (proof of Guccis) to the forum.\n\nAbstract\nCurrently the footwear Andre has pales in comparison to the overall aesthetic, comfort and lavishness of Gucci sliders. As chief builder and architect of YFI and the yearn ecosystem, his feet deserve only the finest most luxurious handcrafted Italian fashion.\n\nMotivation\nAndre refuses all monetary rewards but has said he is at the mercy of the protocol. It is time for the protocol to rise up and deliver the Guccis. These Guccis can also be worn at the future YFI Tokyo party, saving Andre the time and money of buying them later.\n\nCommunity development\nPutting the Guccis to vote will get people using the new system and increase activity going forward.\n\nHaving fun.\nYou know when you work hardest? When you’re having fun. Things have been too serious lately. Let’s get everyone together for the best cause on the planet.\n\nSpecification \nLearn Yearn sends a digital coupon to Andre Cronje to claim a pair of Gucci sliders.\n\nAndre receives the Gucci sliders and uploads PoG to the forum.\n\nEveryone who participates in the voting will receive a GUCCI NFT representing their participation in this once in a lifetime event.";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.payload.choices = [];
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.payload.choices[0] = "Andre gets Guccis. We all get a Gucci NFT.";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.payload.choices[1] = "Nothing changes. No Guccis.";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.payload.end = 1598635800;
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.payload.name = "Guccis for Andre";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.payload.snapshot = "10737432";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.payload.start = 1598376600;
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.space = "yearn";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.timestamp = "1598462267";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.type = "proposal";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.msg.version = "0.1.1";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.relayerIpfsHash = "Qmc9G1QF7bW7c6g94qBdKBRqqLoa1RiZaMAk4TSefuwHh6";
json.QmdjEaCdfNvQVYDeApobNV6BbteR3mVAXnbHBax1gWh6Qp.sig = "0xd93c99ea6a23219c9aca471e7bd6f393c24c3a0ed7f65c786b2c013ef847676b66c18d423f8f2265773403bf766aca532a91cfcb3a338199518a121263be0ab41b";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf = {};
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.address = "0x7A1057E6e9093DA9C1D4C1D049609B6889fC4c67";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.authorIpfsHash = "QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg = {};
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload = {};
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.body = "Summary\nReward authors of original strategies by determining a split between strategist and governance roles.\n\nAbstract\nThis proposal is to poll for a reward split between strategy makers and governance stakers. It will be promoted to YIP unless a noop (0% to strategist, 100% to governance) option wins.\n\nMotivation\nA kid can write a \"stake in unipool, sell on uniswap\" strategy these days. But can we come up with something better? Can your strategy hold up when there is $100 million in it?\n\nOur very first community-developed strategy for ETH will come out real soon, it's the most complex so far and I think it's an important point to have this discussion.\n\nWe need to reward people who develop original and ingenious strategies.\n\nSpecification\nImplement a per-strategy harvest % split between `strategist` and `governance`.";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices = [];
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices[0] = "0% to strategist, 100% to governance";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices[1] = "10% to strategist, 90% to governance";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices[2] = "20% to strategist, 80% to governance";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices[3] = "30% to strategist, 70% to governance";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices[4] = "40% to strategist, 60% to governance";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices[5] = "50% to strategist, 50% to governance";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices[6] = "60% to strategist, 40% to governance";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices[7] = "70% to strategist, 30% to governance";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices[8] = "80% to strategist, 20% to governance";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices[9] = "90% to strategist, 10% to governance";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.choices[10] = "100% to strategist, 0% to governance";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.end = 1598776200;
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.name = "Reward authors of innovative strategies";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.snapshot = "10741504";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.payload.start = 1598517000;
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.space = "yearn";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.timestamp = "1598517067";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.type = "proposal";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.msg.version = "0.1.1";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.relayerIpfsHash = "QmbubMc6UxwGGgWbRtcfrj4Titx64EPR4iXEGR39BMexei";
json.QmdoQr44Q8rCPd7mfQsMhQwt4o3X4MZ2k89uLAe4fEXCwf.sig = "0x7d479a9c46b3a08678cd7b8cfc50d87f4fee05e9a1f3770133c17fd520ec3a0c6e51a5117c406aaf18802d27f3bddebbdf65b82adc8b068d19f54489b6f394a11c";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.address = "0xCE2329e61911a9872D346140dD5B813fcf9a3c3A";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.authorIpfsHash = "QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.body = "sd";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.choices = [];
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.choices[0] = "asd";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.choices[1] = "asd";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.end = 1616835600;
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies = [];
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[0] = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[0].params = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[1] = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[1].params = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2] = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].name = "delegation";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.strategies = [];
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.strategies[0] = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.strategies[0].name = "erc20-balance-of";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.strategies[0].params = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.strategies[0].params.decimals = 18;
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.strategies[1] = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.strategies[1].name = "yearn-vault";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.strategies[1].params = {};
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.strategies[1].params.decimals = 18;
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.metadata.strategies[2].params.symbol = "YFI (delegated)";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.name = "df";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.snapshot = 11999685;
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.payload.start = 1614852000;
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.space = "yearn";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.timestamp = "1615230990";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.type = "proposal";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.msg.version = "0.1.3";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.relayerIpfsHash = "QmbmebP9FYFkUCAr5Sv6F1vft8sE3Y1phoLhLW7up7febX";
json.QmeVAdDutx4H4Gf9QS1Ri1zUCCc2GjGpUUrqdzBREw55xn.sig = "0xe6ddd5808679ca85c1acd91a55dc4b8db3621c857d48fd405fd8deefd8706ed06b6a93836a328a580f314ae7307cc445ffe1d63990810faeb69c41a5af6b15d71c";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm = {};
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.address = "0xFa5e1758D3a1e39652c9c0046D6e3A5cD31f6466";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.authorIpfsHash = "QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg = {};
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload = {};
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.body = "Are there two possibilities for good profit?";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.choices = [];
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.choices[0] = "Airdrops";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.choices[1] = "Stakin";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.end = 1612004400;
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata = {};
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies = [];
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[0] = {};
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[0].name = "erc20-balance-of";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[0].params = {};
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[0].params.address = "0xBa37B002AbaFDd8E89a1995dA52740bbC013D992";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[0].params.decimals = 18;
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[0].params.symbol = "YFI";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[1] = {};
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[1].name = "yearn-vault";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[1].params = {};
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[1].params.address = "0xBA2E7Fed597fd0E3e70f5130BcDbbFE06bB94fe1";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[1].params.decimals = 18;
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.metadata.strategies[1].params.symbol = "YFI (yYFI)";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.name = "How to earn yearn finance ";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.snapshot = 11523159;
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.payload.start = 1608807600;
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.space = "yearn";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.timestamp = "1608904533";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.type = "proposal";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.msg.version = "0.1.3";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.relayerIpfsHash = "QmQdW3j8oNv2bsYQ9j5g8D5cXxN3gaXhLRMzaoH7hn1SRV";
json.QmeVTt9V5N85wzjiHFhxYUSY8Jz7e65GKqrMzsawqN3aJm.sig = "0x10ddc7f790c36ad78d757a22d65d1301cdd590e3d77049080810ae4428d88b4e5fe6982447093457009e64735d289f242ed7f9122f6d184487a1f7ac6fc2c4e31b";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU = {};
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.address = "0xfCfff8622cB6212C9b422CEb8E8262dB81c98cA9";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.authorIpfsHash = "QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg = {};
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.payload = {};
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.payload.body = "please guys donations some for poor people bcz can't buy and earn again money in Crypto Community poor always poor this is so bad \nif you are good day and earn good money please donate or give or gift some for poor people :\n0xfCfff8622cB6212C9b422CEb8E8262dB81c98cA9";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.payload.choices = [];
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.payload.choices[0] = "yes";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.payload.choices[1] = "no";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.payload.end = 1609403400;
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.payload.metadata = {};
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.payload.name = "giveaway poor people ";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.payload.snapshot = 11254210;
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.payload.start = 1605429000;
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.space = "yearn";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.timestamp = "1605335672";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.type = "proposal";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.msg.version = "0.1.3";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.relayerIpfsHash = "Qmeyq65rAkAdvFXncnQRzeAVHCbzWL1oFYLsqXfCHRP93Q";
json.QmegM7tWoysSPxo4NuSyPVfCtZ9QePJ5ZQoM9tTTHYZ6WU.sig = "0x8e89763d7cf2879acde5310a0a841867c0101847e166d8a9520ad10084d41b455eeaf1954c12160bd2f769b73718f6920b454aa4f5fbfc48f61bd9d8dbfaca5b1b";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M = {};
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.address = "0x1138DA90Fb90cEaded062ba8d22324A6737182c7";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.authorIpfsHash = "QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg = {};
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.payload = {};
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.payload.body = "## Summary\n\n-   Focused proposal to set the fee structure for Vaults v2 to:\n    1. No withdrawal fee\n    2. Management fee (2%)\n    3. Performance fee (20%)\n-   The proposal leaves:\n    -   Total fees collected at roughly the same level as for Vaults v1\n    -   Strategist reward allocation unchanged\n    -   YFI staking and rewards unchanged\n    -   Treasury management unchanged\n\n## Background\n\nThe high level design of the next iteration of Yearn Vaults, v2, has been voted on and approved by YFI holders.[[1]](#References) It is currently in the later stages of the development cycle. Testing has begun, and security audits are in progress.\n\nWith the new vaults likely being weeks away from launch, it is high time to finalize how fees will be collected in them.\n\n### Out of scope\n\nThere are currently active discussions underway in the community about many related topics, such as to what extent:\n\n-    Rewards should be distributed to YFI stakers [[2]](#References)\n-   Strategist creators should be rewarded  for their contributions [[3]](#References)\n-   Contributors should be allocated a portion of rewards for the purpose of long term incentivization. [[4]](#References)\n\nThose questions are not answered by this proposal, and are not discussed further here. Specifically, anything that concerns what fees are spent on, how different stakeholders are compensated, or how the treasury should be run, is not covered by this proposal and is assumed to be unchanged.\n\n### In scope\n\nInstead, the focus here is to determine _how fees are collected_, and _the total amount collected_, with the intention to meet the following objectives:\n\n-   **Keep fees at roughly the same level.** The proposal should not lead to a significant change in the overall fee levels that are in place today with Vaults v1.\n-   Ensure fees incentivize the desired behavior among various stakeholders:\n    -   **Users** should be encouraged to keep funds in a vault if it performs well, and withdraw if the vault under-performs.\n    -   **Yearn** should be encouraged to design the best possible vaults, by ensuring rewards go up as a vault attracts and retains capital, and go down as capital leaves the vault. Similarly, rewards should increase if the vault performs well, and decrease if it under-performs.\n    -   **Third party integrations** should be encouraged to integrate Yearn vaults in their own products and services. It should be easy for them to reason about the expected behavior when depositing and withdrawing, and the fees charged by the vault.\n\n## Motivation\n\n### Previous fee structure, Vaults v1\n\n-   5% performance fee, out of which\n    -   4.5% went to Treasury\n    -   0.5% went to the Strategist\n-   0 to 0.5% withdrawal fee\n    -   0% when funds were available in the Vault\n    -   0.5% when funds had to be withdrawn from the Strategy\n\n### Problems with a fee on withdrawals\n\n-   **Charges Users when they are the least happy with the vault.** You are charged a withdrawal fee when you no longer use the vault. If the vault performs, you would leave your funds in it and avoid paying for the service.\n-   **Rewards Yearn when there is capital flight.** More money leaving the vault leads to more fees, when it should be the opposite.\n-   **Can be gamed.** Astute users and integrations can time it so that they make free withdrawals in the period after the vault has seen deposits, as long as it's done before those funds have been sent to the Strategy for investing.\n-   **Makes fees unpredictable for integrations.** It's unclear what the fees charged will be prior to the actual withdrawal, making it harder for third party integrations to calculate ROI accurately.\n\n### Benefits with a management fee\n\n-   **Continuous pay based on usage.** The vault provides a service that people are paying for, continuously, based on the time their capital is in the vault. There is no incentive to withdraw late or early.\n-   **Encourages optimizing for retention.** Yearn earns more fees when users keep funds in the vault, and makes less when they withdraw.\n-   **Benefits composability.** Makes it easier to integrate Vaults with other products and services.\n\n### Comparing fees with v1\n\nThe backtesting data produced in [[4]](#References) shows how the new fee model is delivering roughly the same amount of total fees, compared to the model used in Vaults v1:\n\n![bar chart](https://i.imgur.com/dI13oYy.png)\n\n\n\n|  | Withdrawal fee | Performance fee | Management fee | Total fees | % |\n|---|---:|---:|---:|---:|---:|\n| **Old** | $2,243,078 | $466,822 | N/A | $2,709,900 | 100% |\n| **New** | N/A | $1,867,288 | $699,237 | $2,566,525 | 95%\n\n#### Comments\n* The previous withdrawal fee accounted for a whopping **83%** of all fees collected. This is very high for a fee that is unrelated to actual performance of the service.\n* In contrast, the management fee in Vaults v2 would only account for **27%** of total fees.\n* A much larger portion of fees are now made out of the performance fee component, **17%** of total fees in the old model, **73%** in the new model. This means that incentives are better aligned as Yearn earns most of it fees and Users pay most of their fees only if the Vaults are performing well.\n\n## Specification\n\n### New fee structure\n\n-   0% withdrawal fee\n-   2% annualized management\n    -   Full amount allocated to Treasury\n    -   Accrued per block\n    -   Collected on each harvest)\n-   20% performance fee\n    -   19.5% allocated to Treasury\n    -   0.5% allocated to the Strategist (unchanged to v1)\n\n## References\n\n1. https://yearn.snapshot.page/#/yearn/proposal/QmRKmXuEMaqY38ccvuZREmi6SfMxyhWQMT3mhJ6Cgfeqq9\n2. https://gov.yearn.finance/t/proposal-rethinking-capital-allocation/7304/\n3. https://gov.yearn.finance/t/proposal-increase-strategist-rewards/\n4. https://gov.yearn.finance/t/restructure-fees-and-align-incentives/\n\n## Vote";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.payload.choices = [];
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.payload.choices[0] = "For: Release Vaults v2 with the proposed fee structure";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.payload.choices[1] = "Against: Release Vaults v2 with some other to be defined fee structure";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.payload.end = 1605182400;
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.payload.metadata = {};
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.payload.name = "Set Vault v2 fee structure";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.payload.snapshot = 11203616;
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.payload.start = 1604750400;
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.space = "yearn";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.timestamp = "1604663776";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.type = "proposal";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.msg.version = "0.1.3";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.relayerIpfsHash = "QmNYf4pmVcUKrmBKc9pdyWgTrdJvCXdCitKrgsUJeZRfx6";
json.QmfAEBi8AgaSaFXwe6iGUBToJXuy5w4f5AH9knb1iPHn6M.sig = "0x8fa77c0011afbcf3c879e15a18edcedb62c79ad6e77a42693f221bdb97543512705804435ca6a2e321f4b64a5557fb6659fbf82cc01428c55a62cf1f97a8dd161c";
